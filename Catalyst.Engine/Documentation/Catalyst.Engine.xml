<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Catalyst.Engine</name>
    </assembly>
    <members>
        <member name="T:Catalyst.Engine.Audio.AudioManager">
            <summary>
            Manages FMOD audio, creates, loads, updates and unloads fmod system.
            Currently loads the master bank.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Audio.AudioManager.StudioSystem">
            <summary>
            System controlling game audio.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Audio.AudioManager.Bank">
            <summary>
            Master bank holding all game audio.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Audio.AudioManager.Strings">
            <summary>
            Reference bank containing strings used for references.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Audio.AudioManager.#ctor">
            <summary>
            Creates the FMOD System. Check Console.Error if audio does not work.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Audio.AudioManager.Initialize(System.Boolean)">
            <summary>
            Function to initialize the FMOD Studio system. Loads "master.bank" and "master.strings.bank"
            </summary>
            <param name="liveUpdate">Initialize with live update integration with FMOD Studio.</param>
        </member>
        <member name="M:Catalyst.Engine.Audio.AudioManager.Update">
            <summary>
            Update call for FMOD. Called once per frame.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Audio.AudioManager.Unload">
            <summary>
            Release FMOD studio system.
            </summary>
        </member>
        <member name="T:Catalyst.Engine.Engine">
            <summary>
            This is the main type for your game.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Engine.Initialize">
            <summary>
            Allows the game to perform any initialization it needs to before starting to run.
            This is where it can query for any required services and load any non-graphic
            related content.  Calling base.Initialize will enumerate through any components
            and initialize them as well.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Engine.LoadContent">
            <summary>
            LoadContent will be called once per game and is the place to load
            all of your content.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Engine.UnloadContent">
            <summary>
            UnloadContent will be called once per game and is the place to unload
            game-specific content.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Engine.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Allows the game to run logic such as updating the world,
            checking for collisions, gathering input, and playing audio.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="M:Catalyst.Engine.Engine.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            This is called when the game should draw itself.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="T:Catalyst.Engine.Input.Input">
            <summary>
            Input component class, used to keep track of the input for a current frame.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Input.Input.KeyboardState">
            <summary>
            Current state of the keyboard. See <see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/>
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Input.Input.PreviousKeyboardState">
            <summary>
            Previous frame's state of the keyboard. See <see cref="T:Microsoft.Xna.Framework.Input.KeyboardState"/>
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Input.Input.MouseX">
            <summary>
            Current mouse's X position.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Input.Input.MouseY">
            <summary>
            Current mouse's Y position.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Input.Input.MousePressed">
            <summary>
            Right click occured this frame.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Input.Input.GPState">
            <summary>
            Current frame's state of the gamepad. See <see cref="T:Microsoft.Xna.Framework.Input.GamePadState"/>
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Input.Input.PreviousGPState">
            <summary>
            Previous frame's state of the gamepad. See <see cref="T:Microsoft.Xna.Framework.Input.GamePadState"/>
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Input.Input.Capabilities">
            <summary>
            Represent's the gamepad's capabilites. See <see cref="T:Microsoft.Xna.Framework.Input.GamePadState"/>
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Input.Input.#ctor(Catalyst.Engine.Entity)">
            <summary>
            Input component object. Initializes keyboard, mouse and gamepad states.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="T:Catalyst.Engine.Input.InputSystem">
            <summary>
            System to manage updating input components.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Input.InputSystem.#ctor(Catalyst.Engine.Scene)">
            <summary>
            Create and initialize InputSystem for a scene.
            </summary>
            <param name="scene"></param>
        </member>
        <member name="M:Catalyst.Engine.Input.InputSystem.PreUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Update all input components. See <see cref="T:Catalyst.Engine.Input.Input"/>.
            Update occurs befor main update. Generally, this system is checked first.
            Currently, single player input is checked.
            </summary>
            <param name="gameTime">Current detla time.</param>
        </member>
        <member name="T:Catalyst.Engine.Physics.MovementSystem">
            <summary>
            Class to handle the updating of transorm and velocity components.
            Currently moves all Actor entities, and checks for collision with Solid entites.
            <remarks>Currently runs in O(n * m) where n is of actors and m is number of solids. 
            Quad tree needs to be implemented to reduce runtime complexity.</remarks>
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Physics.MovementSystem.#ctor(Catalyst.Engine.Scene)">
            <summary>
            Create and initialize movement system.
            </summary>
            <param name="scene"></param>
        </member>
        <member name="M:Catalyst.Engine.Physics.MovementSystem.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Update all transform and velocity components held by actors.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="T:Catalyst.Engine.Physics.Position">
            <summary>
            Transform component representing physical location of an entity.
            <extends></extends>
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingBox.CreateFromPoints(Catalyst.Engine.Utilities.Vector3[],System.Int32,System.Int32)">
            <summary>
            Create a bounding box from the given list of points.
            </summary>
            <param name="points">The array of Vector3 instances defining the point cloud to bound</param>
            <param name="index">The base index to start iterating from</param>
            <param name="count">The number of points to iterate</param>
            <returns>A bounding box that encapsulates the given point cloud.</returns>
            <exception cref="T:System.ArgumentException">Thrown if the given array is null or has no points.</exception>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingBox.CreateFromPoints(System.Collections.Generic.List{Catalyst.Engine.Utilities.Vector3},System.Int32,System.Int32)">
            <summary>
            Create a bounding box from the given list of points.
            </summary>
            <param name="points">The list of Vector3 instances defining the point cloud to bound</param>
            <param name="index">The base index to start iterating from</param>
            <param name="count">The number of points to iterate</param>
            <returns>A bounding box that encapsulates the given point cloud.</returns>
            <exception cref="T:System.ArgumentException">Thrown if the given list is null or has no points.</exception>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingBox.CreateFromPoints(System.Collections.Generic.IEnumerable{Catalyst.Engine.Utilities.Vector3})">
            <summary>
            Create a bounding box from the given list of points.
            </summary>
            <param name="points">The list of Vector3 instances defining the point cloud to bound</param>
            <returns>A bounding box that encapsulates the given point cloud.</returns>
            <exception cref="T:System.ArgumentException">Thrown if the given list has no points.</exception>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingBox.Deconstruct(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Deconstruction method for <see cref="T:Catalyst.Engine.Utilities.BoundingBox"/>.
            </summary>
            <param name="min"></param>
            <param name="max"></param>
        </member>
        <member name="T:Catalyst.Engine.Utilities.BoundingSphere">
            <summary>
            Describes a sphere in 3D-space for bounding operations.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.BoundingSphere.Center">
            <summary>
            The sphere center.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.BoundingSphere.Radius">
            <summary>
            The sphere radius.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.#ctor(Catalyst.Engine.Utilities.Vector3,System.Single)">
            <summary>
            Constructs a bounding sphere with the specified center and radius.  
            </summary>
            <param name="center">The sphere center.</param>
            <param name="radius">The sphere radius.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.Contains(Catalyst.Engine.Utilities.BoundingBox)">
            <summary>
            Test if a bounding box is fully inside, outside, or just intersecting the sphere.
            </summary>
            <param name="box">The box for testing.</param>
            <returns>The containment type.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.Contains(Catalyst.Engine.Utilities.BoundingBox@,Microsoft.Xna.Framework.ContainmentType@)">
            <summary>
            Test if a bounding box is fully inside, outside, or just intersecting the sphere.
            </summary>
            <param name="box">The box for testing.</param>
            <param name="result">The containment type as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.Contains(Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Test if a frustum is fully inside, outside, or just intersecting the sphere.
            </summary>
            <param name="frustum">The frustum for testing.</param>
            <returns>The containment type.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.Contains(Microsoft.Xna.Framework.BoundingFrustum@,Microsoft.Xna.Framework.ContainmentType@)">
            <summary>
            Test if a frustum is fully inside, outside, or just intersecting the sphere.
            </summary>
            <param name="frustum">The frustum for testing.</param>
            <param name="result">The containment type as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.Contains(Catalyst.Engine.Utilities.BoundingSphere)">
            <summary>
            Test if a sphere is fully inside, outside, or just intersecting the sphere.
            </summary>
            <param name="sphere">The other sphere for testing.</param>
            <returns>The containment type.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.Contains(Catalyst.Engine.Utilities.BoundingSphere@,Microsoft.Xna.Framework.ContainmentType@)">
            <summary>
            Test if a sphere is fully inside, outside, or just intersecting the sphere.
            </summary>
            <param name="sphere">The other sphere for testing.</param>
            <param name="result">The containment type as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.Contains(Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Test if a point is fully inside, outside, or just intersecting the sphere.
            </summary>
            <param name="point">The vector in 3D-space for testing.</param>
            <returns>The containment type.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.Contains(Catalyst.Engine.Utilities.Vector3@,Microsoft.Xna.Framework.ContainmentType@)">
            <summary>
            Test if a point is fully inside, outside, or just intersecting the sphere.
            </summary>
            <param name="point">The vector in 3D-space for testing.</param>
            <param name="result">The containment type as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.CreateFromBoundingBox(Catalyst.Engine.Utilities.BoundingBox)">
            <summary>
            Creates the smallest <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/> that can contain a specified <see cref="T:Catalyst.Engine.Utilities.BoundingBox"/>.
            </summary>
            <param name="box">The box to create the sphere from.</param>
            <returns>The new <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.CreateFromBoundingBox(Catalyst.Engine.Utilities.BoundingBox@,Catalyst.Engine.Utilities.BoundingSphere@)">
            <summary>
            Creates the smallest <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/> that can contain a specified <see cref="T:Catalyst.Engine.Utilities.BoundingBox"/>.
            </summary>
            <param name="box">The box to create the sphere from.</param>
            <param name="result">The new <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/> as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.CreateFromFrustum(Microsoft.Xna.Framework.BoundingFrustum)">
            <summary>
            Creates the smallest <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/> that can contain a specified <see cref="T:Microsoft.Xna.Framework.BoundingFrustum"/>.
            </summary>
            <param name="frustum">The frustum to create the sphere from.</param>
            <returns>The new <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.CreateFromPoints(System.Collections.Generic.IEnumerable{Catalyst.Engine.Utilities.Vector3})">
            <summary>
            Creates the smallest <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/> that can contain a specified list of points in 3D-space. 
            </summary>
            <param name="points">List of point to create the sphere from.</param>
            <returns>The new <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.CreateMerged(Catalyst.Engine.Utilities.BoundingSphere,Catalyst.Engine.Utilities.BoundingSphere)">
            <summary>
            Creates the smallest <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/> that can contain two spheres.
            </summary>
            <param name="original">First sphere.</param>
            <param name="additional">Second sphere.</param>
            <returns>The new <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.CreateMerged(Catalyst.Engine.Utilities.BoundingSphere@,Catalyst.Engine.Utilities.BoundingSphere@,Catalyst.Engine.Utilities.BoundingSphere@)">
            <summary>
            Creates the smallest <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/> that can contain two spheres.
            </summary>
            <param name="original">First sphere.</param>
            <param name="additional">Second sphere.</param>
            <param name="result">The new <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/> as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.Equals(Catalyst.Engine.Utilities.BoundingSphere)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/>.
            </summary>
            <param name="other">The <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.Intersects(Catalyst.Engine.Utilities.BoundingBox)">
            <summary>
            Gets whether or not a specified <see cref="T:Catalyst.Engine.Utilities.BoundingBox"/> intersects with this sphere.
            </summary>
            <param name="box">The box for testing.</param>
            <returns><c>true</c> if <see cref="T:Catalyst.Engine.Utilities.BoundingBox"/> intersects with this sphere; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.Intersects(Catalyst.Engine.Utilities.BoundingBox@,System.Boolean@)">
            <summary>
            Gets whether or not a specified <see cref="T:Catalyst.Engine.Utilities.BoundingBox"/> intersects with this sphere.
            </summary>
            <param name="box">The box for testing.</param>
            <param name="result"><c>true</c> if <see cref="T:Catalyst.Engine.Utilities.BoundingBox"/> intersects with this sphere; <c>false</c> otherwise. As an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.Intersects(Catalyst.Engine.Utilities.BoundingSphere)">
            <summary>
            Gets whether or not the other <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/> intersects with this sphere.
            </summary>
            <param name="sphere">The other sphere for testing.</param>
            <returns><c>true</c> if other <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/> intersects with this sphere; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.Intersects(Catalyst.Engine.Utilities.BoundingSphere@,System.Boolean@)">
            <summary>
            Gets whether or not the other <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/> intersects with this sphere.
            </summary>
            <param name="sphere">The other sphere for testing.</param>
            <param name="result"><c>true</c> if other <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/> intersects with this sphere; <c>false</c> otherwise. As an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.Intersects(Catalyst.Engine.Utilities.Plane)">
            <summary>
            Gets whether or not a specified <see cref="T:Catalyst.Engine.Utilities.Plane"/> intersects with this sphere.
            </summary>
            <param name="plane">The plane for testing.</param>
            <returns>Type of intersection.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.Intersects(Catalyst.Engine.Utilities.Plane@,Microsoft.Xna.Framework.PlaneIntersectionType@)">
            <summary>
            Gets whether or not a specified <see cref="T:Catalyst.Engine.Utilities.Plane"/> intersects with this sphere.
            </summary>
            <param name="plane">The plane for testing.</param>
            <param name="result">Type of intersection as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.Intersects(Catalyst.Engine.Utilities.Ray)">
            <summary>
            Gets whether or not a specified <see cref="T:Catalyst.Engine.Utilities.Ray"/> intersects with this sphere.
            </summary>
            <param name="ray">The ray for testing.</param>
            <returns>Distance of ray intersection or <c>null</c> if there is no intersection.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.Intersects(Catalyst.Engine.Utilities.Ray@,System.Nullable{System.Single}@)">
            <summary>
            Gets whether or not a specified <see cref="T:Catalyst.Engine.Utilities.Ray"/> intersects with this sphere.
            </summary>
            <param name="ray">The ray for testing.</param>
            <param name="result">Distance of ray intersection or <c>null</c> if there is no intersection as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/> in the format:
            {Center:[<see cref="F:Catalyst.Engine.Utilities.BoundingSphere.Center"/>] Radius:[<see cref="F:Catalyst.Engine.Utilities.BoundingSphere.Radius"/>]}
            </summary>
            <returns>A <see cref="T:System.String"/> representation of this <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.Transform(Catalyst.Engine.Utilities.Matrix)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/> that contains a transformation of translation and scale from this sphere by the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="matrix">The transformation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <returns>Transformed <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.Transform(Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.BoundingSphere@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/> that contains a transformation of translation and scale from this sphere by the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="matrix">The transformation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="result">Transformed <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/> as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.Deconstruct(Catalyst.Engine.Utilities.Vector3@,System.Single@)">
            <summary>
            Deconstruction method for <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/>.
            </summary>
            <param name="center"></param>
            <param name="radius"></param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.op_Equality(Catalyst.Engine.Utilities.BoundingSphere,Catalyst.Engine.Utilities.BoundingSphere)">
            <summary>
            Compares whether two <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/> instances are equal.
            </summary>
            <param name="a"><see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/> instance on the left of the equal sign.</param>
            <param name="b"><see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.BoundingSphere.op_Inequality(Catalyst.Engine.Utilities.BoundingSphere,Catalyst.Engine.Utilities.BoundingSphere)">
            <summary>
            Compares whether two <see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/> instances are not equal.
            </summary>
            <param name="a"><see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/> instance on the left of the not equal sign.</param>
            <param name="b"><see cref="T:Catalyst.Engine.Utilities.BoundingSphere"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Catalyst.Engine.Utilities.Color">
            <summary>
            Describes a 32-bit packed color.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Color.#ctor(System.UInt32)">
            <summary>
            Constructs an RGBA color from a packed value.
            The value is a 32-bit unsigned integer, with R in the least significant octet.
            </summary>
            <param name="packedValue">The packed value.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Color.#ctor(Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Constructs an RGBA color from the XYZW unit length components of a vector.
            </summary>
            <param name="color">A <see cref="T:Catalyst.Engine.Utilities.Vector4"/> representing color.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Color.#ctor(Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Constructs an RGBA color from the XYZ unit length components of a vector. Alpha value will be opaque.
            </summary>
            <param name="color">A <see cref="T:Catalyst.Engine.Utilities.Vector3"/> representing color.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Color.#ctor(Catalyst.Engine.Utilities.Color,System.Int32)">
            <summary>
            Constructs an RGBA color from a <see cref="T:Catalyst.Engine.Utilities.Color"/> and an alpha value.
            </summary>
            <param name="color">A <see cref="T:Catalyst.Engine.Utilities.Color"/> for RGB values of new <see cref="T:Catalyst.Engine.Utilities.Color"/> instance.</param>
            <param name="alpha">The alpha component value from 0 to 255.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Color.#ctor(Catalyst.Engine.Utilities.Color,System.Single)">
            <summary>
            Constructs an RGBA color from color and alpha value.
            </summary>
            <param name="color">A <see cref="T:Catalyst.Engine.Utilities.Color"/> for RGB values of new <see cref="T:Catalyst.Engine.Utilities.Color"/> instance.</param>
            <param name="alpha">Alpha component value from 0.0f to 1.0f.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Color.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Constructs an RGBA color from scalars representing red, green and blue values. Alpha value will be opaque.
            </summary>
            <param name="r">Red component value from 0.0f to 1.0f.</param>
            <param name="g">Green component value from 0.0f to 1.0f.</param>
            <param name="b">Blue component value from 0.0f to 1.0f.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Color.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs an RGBA color from scalars representing red, green, blue and alpha values.
            </summary>
            <param name="r">Red component value from 0.0f to 1.0f.</param>
            <param name="g">Green component value from 0.0f to 1.0f.</param>
            <param name="b">Blue component value from 0.0f to 1.0f.</param>
            <param name="alpha">Alpha component value from 0.0f to 1.0f.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Color.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructs an RGBA color from scalars representing red, green and blue values. Alpha value will be opaque.
            </summary>
            <param name="r">Red component value from 0 to 255.</param>
            <param name="g">Green component value from 0 to 255.</param>
            <param name="b">Blue component value from 0 to 255.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Color.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructs an RGBA color from scalars representing red, green, blue and alpha values.
            </summary>
            <param name="r">Red component value from 0 to 255.</param>
            <param name="g">Green component value from 0 to 255.</param>
            <param name="b">Blue component value from 0 to 255.</param>
            <param name="alpha">Alpha component value from 0 to 255.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Color.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Constructs an RGBA color from scalars representing red, green, blue and alpha values.
            </summary>
            <remarks>
            This overload sets the values directly without clamping, and may therefore be faster than the other overloads.
            </remarks>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <param name="alpha"></param>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.B">
            <summary>
            Gets or sets the blue component.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.G">
            <summary>
            Gets or sets the green component.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.R">
            <summary>
            Gets or sets the red component.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.A">
            <summary>
            Gets or sets the alpha component.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Color.op_Equality(Catalyst.Engine.Utilities.Color,Catalyst.Engine.Utilities.Color)">
            <summary>
            Compares whether two <see cref="T:Catalyst.Engine.Utilities.Color"/> instances are equal.
            </summary>
            <param name="a"><see cref="T:Catalyst.Engine.Utilities.Color"/> instance on the left of the equal sign.</param>
            <param name="b"><see cref="T:Catalyst.Engine.Utilities.Color"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Color.op_Inequality(Catalyst.Engine.Utilities.Color,Catalyst.Engine.Utilities.Color)">
            <summary>
            Compares whether two <see cref="T:Catalyst.Engine.Utilities.Color"/> instances are not equal.
            </summary>
            <param name="a"><see cref="T:Catalyst.Engine.Utilities.Color"/> instance on the left of the not equal sign.</param>
            <param name="b"><see cref="T:Catalyst.Engine.Utilities.Color"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>	
        </member>
        <member name="M:Catalyst.Engine.Utilities.Color.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Catalyst.Engine.Utilities.Color"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Catalyst.Engine.Utilities.Color"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Color.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified object.
            </summary>
            <param name="obj">The <see cref="T:Catalyst.Engine.Utilities.Color"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.TransparentBlack">
            <summary>
            TransparentBlack color (R:0,G:0,B:0,A:0).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Transparent">
            <summary>
            Transparent color (R:0,G:0,B:0,A:0).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.AliceBlue">
            <summary>
            AliceBlue color (R:240,G:248,B:255,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.AntiqueWhite">
            <summary>
            AntiqueWhite color (R:250,G:235,B:215,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Aqua">
            <summary>
            Aqua color (R:0,G:255,B:255,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Aquamarine">
            <summary>
            Aquamarine color (R:127,G:255,B:212,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Azure">
            <summary>
            Azure color (R:240,G:255,B:255,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Beige">
            <summary>
            Beige color (R:245,G:245,B:220,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Bisque">
            <summary>
            Bisque color (R:255,G:228,B:196,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Black">
            <summary>
            Black color (R:0,G:0,B:0,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.BlanchedAlmond">
            <summary>
            BlanchedAlmond color (R:255,G:235,B:205,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Blue">
            <summary>
            Blue color (R:0,G:0,B:255,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.BlueViolet">
            <summary>
            BlueViolet color (R:138,G:43,B:226,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Brown">
            <summary>
            Brown color (R:165,G:42,B:42,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.BurlyWood">
            <summary>
            BurlyWood color (R:222,G:184,B:135,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.CadetBlue">
            <summary>
            CadetBlue color (R:95,G:158,B:160,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Chartreuse">
            <summary>
            Chartreuse color (R:127,G:255,B:0,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Chocolate">
            <summary>
            Chocolate color (R:210,G:105,B:30,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Coral">
            <summary>
            Coral color (R:255,G:127,B:80,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.CornflowerBlue">
            <summary>
            CornflowerBlue color (R:100,G:149,B:237,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Cornsilk">
            <summary>
            Cornsilk color (R:255,G:248,B:220,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Crimson">
            <summary>
            Crimson color (R:220,G:20,B:60,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Cyan">
            <summary>
            Cyan color (R:0,G:255,B:255,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.DarkBlue">
            <summary>
            DarkBlue color (R:0,G:0,B:139,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.DarkCyan">
            <summary>
            DarkCyan color (R:0,G:139,B:139,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.DarkGoldenrod">
            <summary>
            DarkGoldenrod color (R:184,G:134,B:11,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.DarkGray">
            <summary>
            DarkGray color (R:169,G:169,B:169,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.DarkGreen">
            <summary>
            DarkGreen color (R:0,G:100,B:0,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.DarkKhaki">
            <summary>
            DarkKhaki color (R:189,G:183,B:107,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.DarkMagenta">
            <summary>
            DarkMagenta color (R:139,G:0,B:139,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.DarkOliveGreen">
            <summary>
            DarkOliveGreen color (R:85,G:107,B:47,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.DarkOrange">
            <summary>
            DarkOrange color (R:255,G:140,B:0,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.DarkOrchid">
            <summary>
            DarkOrchid color (R:153,G:50,B:204,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.DarkRed">
            <summary>
            DarkRed color (R:139,G:0,B:0,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.DarkSalmon">
            <summary>
            DarkSalmon color (R:233,G:150,B:122,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.DarkSeaGreen">
            <summary>
            DarkSeaGreen color (R:143,G:188,B:139,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.DarkSlateBlue">
            <summary>
            DarkSlateBlue color (R:72,G:61,B:139,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.DarkSlateGray">
            <summary>
            DarkSlateGray color (R:47,G:79,B:79,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.DarkTurquoise">
            <summary>
            DarkTurquoise color (R:0,G:206,B:209,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.DarkViolet">
            <summary>
            DarkViolet color (R:148,G:0,B:211,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.DeepPink">
            <summary>
            DeepPink color (R:255,G:20,B:147,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.DeepSkyBlue">
            <summary>
            DeepSkyBlue color (R:0,G:191,B:255,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.DimGray">
            <summary>
            DimGray color (R:105,G:105,B:105,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.DodgerBlue">
            <summary>
            DodgerBlue color (R:30,G:144,B:255,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Firebrick">
            <summary>
            Firebrick color (R:178,G:34,B:34,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.FloralWhite">
            <summary>
            FloralWhite color (R:255,G:250,B:240,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.ForestGreen">
            <summary>
            ForestGreen color (R:34,G:139,B:34,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Fuchsia">
            <summary>
            Fuchsia color (R:255,G:0,B:255,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Gainsboro">
            <summary>
            Gainsboro color (R:220,G:220,B:220,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.GhostWhite">
            <summary>
            GhostWhite color (R:248,G:248,B:255,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Gold">
            <summary>
            Gold color (R:255,G:215,B:0,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Goldenrod">
            <summary>
            Goldenrod color (R:218,G:165,B:32,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Gray">
            <summary>
            Gray color (R:128,G:128,B:128,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Green">
            <summary>
            Green color (R:0,G:128,B:0,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.GreenYellow">
            <summary>
            GreenYellow color (R:173,G:255,B:47,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Honeydew">
            <summary>
            Honeydew color (R:240,G:255,B:240,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.HotPink">
            <summary>
            HotPink color (R:255,G:105,B:180,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.IndianRed">
            <summary>
            IndianRed color (R:205,G:92,B:92,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Indigo">
            <summary>
            Indigo color (R:75,G:0,B:130,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Ivory">
            <summary>
            Ivory color (R:255,G:255,B:240,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Khaki">
            <summary>
            Khaki color (R:240,G:230,B:140,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Lavender">
            <summary>
            Lavender color (R:230,G:230,B:250,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.LavenderBlush">
            <summary>
            LavenderBlush color (R:255,G:240,B:245,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.LawnGreen">
            <summary>
            LawnGreen color (R:124,G:252,B:0,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.LemonChiffon">
            <summary>
            LemonChiffon color (R:255,G:250,B:205,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.LightBlue">
            <summary>
            LightBlue color (R:173,G:216,B:230,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.LightCoral">
            <summary>
            LightCoral color (R:240,G:128,B:128,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.LightCyan">
            <summary>
            LightCyan color (R:224,G:255,B:255,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.LightGoldenrodYellow">
            <summary>
            LightGoldenrodYellow color (R:250,G:250,B:210,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.LightGray">
            <summary>
            LightGray color (R:211,G:211,B:211,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.LightGreen">
            <summary>
            LightGreen color (R:144,G:238,B:144,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.LightPink">
            <summary>
            LightPink color (R:255,G:182,B:193,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.LightSalmon">
            <summary>
            LightSalmon color (R:255,G:160,B:122,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.LightSeaGreen">
            <summary>
            LightSeaGreen color (R:32,G:178,B:170,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.LightSkyBlue">
            <summary>
            LightSkyBlue color (R:135,G:206,B:250,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.LightSlateGray">
            <summary>
            LightSlateGray color (R:119,G:136,B:153,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.LightSteelBlue">
            <summary>
            LightSteelBlue color (R:176,G:196,B:222,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.LightYellow">
            <summary>
            LightYellow color (R:255,G:255,B:224,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Lime">
            <summary>
            Lime color (R:0,G:255,B:0,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.LimeGreen">
            <summary>
            LimeGreen color (R:50,G:205,B:50,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Linen">
            <summary>
            Linen color (R:250,G:240,B:230,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Magenta">
            <summary>
            Magenta color (R:255,G:0,B:255,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Maroon">
            <summary>
            Maroon color (R:128,G:0,B:0,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.MediumAquamarine">
            <summary>
            MediumAquamarine color (R:102,G:205,B:170,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.MediumBlue">
            <summary>
            MediumBlue color (R:0,G:0,B:205,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.MediumOrchid">
            <summary>
            MediumOrchid color (R:186,G:85,B:211,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.MediumPurple">
            <summary>
            MediumPurple color (R:147,G:112,B:219,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.MediumSeaGreen">
            <summary>
            MediumSeaGreen color (R:60,G:179,B:113,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.MediumSlateBlue">
            <summary>
            MediumSlateBlue color (R:123,G:104,B:238,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.MediumSpringGreen">
            <summary>
            MediumSpringGreen color (R:0,G:250,B:154,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.MediumTurquoise">
            <summary>
            MediumTurquoise color (R:72,G:209,B:204,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.MediumVioletRed">
            <summary>
            MediumVioletRed color (R:199,G:21,B:133,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.MidnightBlue">
            <summary>
            MidnightBlue color (R:25,G:25,B:112,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.MintCream">
            <summary>
            MintCream color (R:245,G:255,B:250,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.MistyRose">
            <summary>
            MistyRose color (R:255,G:228,B:225,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Moccasin">
            <summary>
            Moccasin color (R:255,G:228,B:181,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.MonoGameOrange">
            <summary>
            MonoGame orange theme color (R:231,G:60,B:0,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.NavajoWhite">
            <summary>
            NavajoWhite color (R:255,G:222,B:173,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Navy">
            <summary>
            Navy color (R:0,G:0,B:128,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.OldLace">
            <summary>
            OldLace color (R:253,G:245,B:230,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Olive">
            <summary>
            Olive color (R:128,G:128,B:0,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.OliveDrab">
            <summary>
            OliveDrab color (R:107,G:142,B:35,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Orange">
            <summary>
            Orange color (R:255,G:165,B:0,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.OrangeRed">
            <summary>
            OrangeRed color (R:255,G:69,B:0,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Orchid">
            <summary>
            Orchid color (R:218,G:112,B:214,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.PaleGoldenrod">
            <summary>
            PaleGoldenrod color (R:238,G:232,B:170,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.PaleGreen">
            <summary>
            PaleGreen color (R:152,G:251,B:152,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.PaleTurquoise">
            <summary>
            PaleTurquoise color (R:175,G:238,B:238,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.PaleVioletRed">
            <summary>
            PaleVioletRed color (R:219,G:112,B:147,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.PapayaWhip">
            <summary>
            PapayaWhip color (R:255,G:239,B:213,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.PeachPuff">
            <summary>
            PeachPuff color (R:255,G:218,B:185,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Peru">
            <summary>
            Peru color (R:205,G:133,B:63,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Pink">
            <summary>
            Pink color (R:255,G:192,B:203,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Plum">
            <summary>
            Plum color (R:221,G:160,B:221,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.PowderBlue">
            <summary>
            PowderBlue color (R:176,G:224,B:230,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Purple">
            <summary>
             Purple color (R:128,G:0,B:128,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Red">
            <summary>
            Red color (R:255,G:0,B:0,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.RosyBrown">
            <summary>
            RosyBrown color (R:188,G:143,B:143,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.RoyalBlue">
            <summary>
            RoyalBlue color (R:65,G:105,B:225,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.SaddleBrown">
            <summary>
            SaddleBrown color (R:139,G:69,B:19,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Salmon">
            <summary>
            Salmon color (R:250,G:128,B:114,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.SandyBrown">
            <summary>
            SandyBrown color (R:244,G:164,B:96,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.SeaGreen">
            <summary>
            SeaGreen color (R:46,G:139,B:87,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.SeaShell">
            <summary>
            SeaShell color (R:255,G:245,B:238,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Sienna">
            <summary>
            Sienna color (R:160,G:82,B:45,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Silver">
            <summary>
            Silver color (R:192,G:192,B:192,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.SkyBlue">
            <summary>
            SkyBlue color (R:135,G:206,B:235,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.SlateBlue">
            <summary>
            SlateBlue color (R:106,G:90,B:205,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.SlateGray">
            <summary>
            SlateGray color (R:112,G:128,B:144,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Snow">
            <summary>
            Snow color (R:255,G:250,B:250,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.SpringGreen">
            <summary>
            SpringGreen color (R:0,G:255,B:127,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.SteelBlue">
            <summary>
            SteelBlue color (R:70,G:130,B:180,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Tan">
            <summary>
            Tan color (R:210,G:180,B:140,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Teal">
            <summary>
            Teal color (R:0,G:128,B:128,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Thistle">
            <summary>
            Thistle color (R:216,G:191,B:216,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Tomato">
            <summary>
            Tomato color (R:255,G:99,B:71,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Turquoise">
            <summary>
            Turquoise color (R:64,G:224,B:208,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Violet">
            <summary>
            Violet color (R:238,G:130,B:238,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Wheat">
            <summary>
            Wheat color (R:245,G:222,B:179,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.White">
            <summary>
            White color (R:255,G:255,B:255,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.WhiteSmoke">
            <summary>
            WhiteSmoke color (R:245,G:245,B:245,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.Yellow">
            <summary>
            Yellow color (R:255,G:255,B:0,A:255).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.YellowGreen">
            <summary>
            YellowGreen color (R:154,G:205,B:50,A:255).
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Color.Lerp(Catalyst.Engine.Utilities.Color,Catalyst.Engine.Utilities.Color,System.Single)">
            <summary>
            Performs linear interpolation of <see cref="T:Catalyst.Engine.Utilities.Color"/>.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Color"/>.</param>
            <param name="value2">Destination <see cref="T:Catalyst.Engine.Utilities.Color"/>.</param>
            <param name="amount">Interpolation factor.</param>
            <returns>Interpolated <see cref="T:Catalyst.Engine.Utilities.Color"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Color.LerpPrecise(Catalyst.Engine.Utilities.Color,Catalyst.Engine.Utilities.Color,System.Single)">
            <summary>
            <see cref="M:Catalyst.Engine.Utilities.Color.Lerp(Catalyst.Engine.Utilities.Color,Catalyst.Engine.Utilities.Color,System.Single)"/> should be used instead of this function.
            </summary>
            <returns>Interpolated <see cref="T:Catalyst.Engine.Utilities.Color"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Color.Multiply(Catalyst.Engine.Utilities.Color,System.Single)">
            <summary>
            Multiply <see cref="T:Catalyst.Engine.Utilities.Color"/> by value.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Color"/>.</param>
            <param name="scale">Multiplicator.</param>
            <returns>Multiplication result.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Color.op_Multiply(Catalyst.Engine.Utilities.Color,System.Single)">
            <summary>
            Multiply <see cref="T:Catalyst.Engine.Utilities.Color"/> by value.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Color"/>.</param>
            <param name="scale">Multiplicator.</param>
            <returns>Multiplication result.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Color.ToVector3">
            <summary>
            Gets a <see cref="T:Catalyst.Engine.Utilities.Vector3"/> representation for this object.
            </summary>
            <returns>A <see cref="T:Catalyst.Engine.Utilities.Vector3"/> representation for this object.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Color.ToVector4">
            <summary>
            Gets a <see cref="T:Catalyst.Engine.Utilities.Vector4"/> representation for this object.
            </summary>
            <returns>A <see cref="T:Catalyst.Engine.Utilities.Vector4"/> representation for this object.</returns>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Color.PackedValue">
            <summary>
            Gets or sets packed value of this <see cref="T:Catalyst.Engine.Utilities.Color"/>.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Color.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Catalyst.Engine.Utilities.Color"/> in the format:
            {R:[red] G:[green] B:[blue] A:[alpha]}
            </summary>
            <returns><see cref="T:System.String"/> representation of this <see cref="T:Catalyst.Engine.Utilities.Color"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Color.FromNonPremultiplied(Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Translate a non-premultipled alpha <see cref="T:Catalyst.Engine.Utilities.Color"/> to a <see cref="T:Catalyst.Engine.Utilities.Color"/> that contains premultiplied alpha.
            </summary>
            <param name="vector">A <see cref="T:Catalyst.Engine.Utilities.Vector4"/> representing color.</param>
            <returns>A <see cref="T:Catalyst.Engine.Utilities.Color"/> which contains premultiplied alpha data.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Color.FromNonPremultiplied(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Translate a non-premultipled alpha <see cref="T:Catalyst.Engine.Utilities.Color"/> to a <see cref="T:Catalyst.Engine.Utilities.Color"/> that contains premultiplied alpha.
            </summary>
            <param name="r">Red component value.</param>
            <param name="g">Green component value.</param>
            <param name="b">Blue component value.</param>
            <param name="a">Alpha component value.</param>
            <returns>A <see cref="T:Catalyst.Engine.Utilities.Color"/> which contains premultiplied alpha data.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Color.Equals(Catalyst.Engine.Utilities.Color)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Catalyst.Engine.Utilities.Color"/>.
            </summary>
            <param name="other">The <see cref="T:Catalyst.Engine.Utilities.Color"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Color.Deconstruct(System.Single@,System.Single@,System.Single@)">
            <summary>
            Deconstruction method for <see cref="T:Catalyst.Engine.Utilities.Color"/>.
            </summary>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Color.Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Deconstruction method for <see cref="T:Catalyst.Engine.Utilities.Color"/> with Alpha.
            </summary>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <param name="a"></param>
        </member>
        <member name="T:Catalyst.Engine.Utilities.Matrix">
            <summary>
            Represents the right-handed 4x4 floating point matrix, which can store translation, scale and rotation information.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a matrix.
            </summary>
            <param name="m11">A first row and first column value.</param>
            <param name="m12">A first row and second column value.</param>
            <param name="m13">A first row and third column value.</param>
            <param name="m14">A first row and fourth column value.</param>
            <param name="m21">A second row and first column value.</param>
            <param name="m22">A second row and second column value.</param>
            <param name="m23">A second row and third column value.</param>
            <param name="m24">A second row and fourth column value.</param>
            <param name="m31">A third row and first column value.</param>
            <param name="m32">A third row and second column value.</param>
            <param name="m33">A third row and third column value.</param>
            <param name="m34">A third row and fourth column value.</param>
            <param name="m41">A fourth row and first column value.</param>
            <param name="m42">A fourth row and second column value.</param>
            <param name="m43">A fourth row and third column value.</param>
            <param name="m44">A fourth row and fourth column value.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.#ctor(Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Constructs a matrix.
            </summary>
            <param name="row1">A first row of the created matrix.</param>
            <param name="row2">A second row of the created matrix.</param>
            <param name="row3">A third row of the created matrix.</param>
            <param name="row4">A fourth row of the created matrix.</param>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Matrix.M11">
            <summary>
            A first row and first column value.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Matrix.M12">
            <summary>
            A first row and second column value.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Matrix.M13">
            <summary>
            A first row and third column value.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Matrix.M14">
            <summary>
            A first row and fourth column value.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Matrix.M21">
            <summary>
            A second row and first column value.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Matrix.M22">
            <summary>
            A second row and second column value.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Matrix.M23">
            <summary>
            A second row and third column value.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Matrix.M24">
            <summary>
            A second row and fourth column value.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Matrix.M31">
            <summary>
            A third row and first column value.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Matrix.M32">
            <summary>
            A third row and second column value.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Matrix.M33">
            <summary>
            A third row and third column value.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Matrix.M34">
            <summary>
            A third row and fourth column value.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Matrix.M41">
            <summary>
            A fourth row and first column value.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Matrix.M42">
            <summary>
            A fourth row and second column value.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Matrix.M43">
            <summary>
            A fourth row and third column value.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Matrix.M44">
            <summary>
            A fourth row and fourth column value.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Matrix.Backward">
            <summary>
            The backward vector formed from the third row M31, M32, M33 elements.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Matrix.Down">
            <summary>
            The down vector formed from the second row -M21, -M22, -M23 elements.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Matrix.Forward">
            <summary>
            The forward vector formed from the third row -M31, -M32, -M33 elements.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Matrix.Identity">
            <summary>
            Returns the identity matrix.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Matrix.Left">
            <summary>
            The left vector formed from the first row -M11, -M12, -M13 elements.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Matrix.Right">
            <summary>
            The right vector formed from the first row M11, M12, M13 elements.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Matrix.Translation">
            <summary>
            Position stored in this matrix.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Matrix.Up">
            <summary>
            The upper vector formed from the second row M21, M22, M23 elements.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.Add(Catalyst.Engine.Utilities.Matrix,Catalyst.Engine.Utilities.Matrix)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Matrix"/> which contains sum of two matrixes.
            </summary>
            <param name="matrix1">The first matrix to add.</param>
            <param name="matrix2">The second matrix to add.</param>
            <returns>The result of the matrix addition.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.Add(Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Matrix"/> which contains sum of two matrixes.
            </summary>
            <param name="matrix1">The first matrix to add.</param>
            <param name="matrix2">The second matrix to add.</param>
            <param name="result">The result of the matrix addition as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateBillboard(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3,System.Nullable{Catalyst.Engine.Utilities.Vector3})">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for spherical billboarding that rotates around specified object position.
            </summary>
            <param name="objectPosition">Position of billboard object. It will rotate around that vector.</param>
            <param name="cameraPosition">The camera position.</param>
            <param name="cameraUpVector">The camera up vector.</param>
            <param name="cameraForwardVector">Optional camera forward vector.</param>
            <returns>The <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for spherical billboarding.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateBillboard(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,System.Nullable{Catalyst.Engine.Utilities.Vector3},Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for spherical billboarding that rotates around specified object position.
            </summary>
            <param name="objectPosition">Position of billboard object. It will rotate around that vector.</param>
            <param name="cameraPosition">The camera position.</param>
            <param name="cameraUpVector">The camera up vector.</param>
            <param name="cameraForwardVector">Optional camera forward vector.</param>
            <param name="result">The <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for spherical billboarding as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateConstrainedBillboard(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3,System.Nullable{Catalyst.Engine.Utilities.Vector3},System.Nullable{Catalyst.Engine.Utilities.Vector3})">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for cylindrical billboarding that rotates around specified axis.
            </summary>
            <param name="objectPosition">Object position the billboard will rotate around.</param>
            <param name="cameraPosition">Camera position.</param>
            <param name="rotateAxis">Axis of billboard for rotation.</param>
            <param name="cameraForwardVector">Optional camera forward vector.</param>
            <param name="objectForwardVector">Optional object forward vector.</param>
            <returns>The <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for cylindrical billboarding.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateConstrainedBillboard(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,System.Nullable{Catalyst.Engine.Utilities.Vector3},System.Nullable{Catalyst.Engine.Utilities.Vector3},Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for cylindrical billboarding that rotates around specified axis.
            </summary>
            <param name="objectPosition">Object position the billboard will rotate around.</param>
            <param name="cameraPosition">Camera position.</param>
            <param name="rotateAxis">Axis of billboard for rotation.</param>
            <param name="cameraForwardVector">Optional camera forward vector.</param>
            <param name="objectForwardVector">Optional object forward vector.</param>
            <param name="result">The <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for cylindrical billboarding as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateFromAxisAngle(Catalyst.Engine.Utilities.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Matrix"/> which contains the rotation moment around specified axis.
            </summary>
            <param name="axis">The axis of rotation.</param>
            <param name="angle">The angle of rotation in radians.</param>
            <returns>The rotation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateFromAxisAngle(Catalyst.Engine.Utilities.Vector3@,System.Single,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Matrix"/> which contains the rotation moment around specified axis.
            </summary>
            <param name="axis">The axis of rotation.</param>
            <param name="angle">The angle of rotation in radians.</param>
            <param name="result">The rotation <see cref="T:Catalyst.Engine.Utilities.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateFromQuaternion(Catalyst.Engine.Utilities.Quaternion)">
            <summary>
            Creates a new rotation <see cref="T:Catalyst.Engine.Utilities.Matrix"/> from a <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.
            </summary>
            <param name="quaternion"><see cref="T:Catalyst.Engine.Utilities.Quaternion"/> of rotation moment.</param>
            <returns>The rotation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateFromQuaternion(Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new rotation <see cref="T:Catalyst.Engine.Utilities.Matrix"/> from a <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.
            </summary>
            <param name="quaternion"><see cref="T:Catalyst.Engine.Utilities.Quaternion"/> of rotation moment.</param>
            <param name="result">The rotation <see cref="T:Catalyst.Engine.Utilities.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new rotation <see cref="T:Catalyst.Engine.Utilities.Matrix"/> from the specified yaw, pitch and roll values.
            </summary>
            <param name="yaw">The yaw rotation value in radians.</param>
            <param name="pitch">The pitch rotation value in radians.</param>
            <param name="roll">The roll rotation value in radians.</param>
            <returns>The rotation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</returns>
            <remarks>For more information about yaw, pitch and roll visit http://en.wikipedia.org/wiki/Euler_angles.
            </remarks>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateFromYawPitchRoll(System.Single,System.Single,System.Single,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new rotation <see cref="T:Catalyst.Engine.Utilities.Matrix"/> from the specified yaw, pitch and roll values.
            </summary>
            <param name="yaw">The yaw rotation value in radians.</param>
            <param name="pitch">The pitch rotation value in radians.</param>
            <param name="roll">The roll rotation value in radians.</param>
            <param name="result">The rotation <see cref="T:Catalyst.Engine.Utilities.Matrix"/> as an output parameter.</param>
            <remarks>For more information about yaw, pitch and roll visit http://en.wikipedia.org/wiki/Euler_angles.
            </remarks>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateLookAt(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Creates a new viewing <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="cameraPosition">Position of the camera.</param>
            <param name="cameraTarget">Lookup vector of the camera.</param>
            <param name="cameraUpVector">The direction of the upper edge of the camera.</param>
            <returns>The viewing <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateLookAt(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new viewing <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="cameraPosition">Position of the camera.</param>
            <param name="cameraTarget">Lookup vector of the camera.</param>
            <param name="cameraUpVector">The direction of the upper edge of the camera.</param>
            <param name="result">The viewing <see cref="T:Catalyst.Engine.Utilities.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new projection <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for orthographic view.
            </summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="zNearPlane">Depth of the near plane.</param>
            <param name="zFarPlane">Depth of the far plane.</param>
            <returns>The new projection <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for orthographic view.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateOrthographic(System.Single,System.Single,System.Single,System.Single,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new projection <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for orthographic view.
            </summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="zNearPlane">Depth of the near plane.</param>
            <param name="zFarPlane">Depth of the far plane.</param>
            <param name="result">The new projection <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for orthographic view as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new projection <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for customized orthographic view.
            </summary>
            <param name="left">Lower x-value at the near plane.</param>
            <param name="right">Upper x-value at the near plane.</param>
            <param name="bottom">Lower y-coordinate at the near plane.</param>
            <param name="top">Upper y-value at the near plane.</param>
            <param name="zNearPlane">Depth of the near plane.</param>
            <param name="zFarPlane">Depth of the far plane.</param>
            <returns>The new projection <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for customized orthographic view.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateOrthographicOffCenter(Catalyst.Engine.Utilities.Rectangle,System.Single,System.Single)">
            <summary>
            Creates a new projection <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for customized orthographic view.
            </summary>
            <param name="viewingVolume">The viewing volume.</param>
            <param name="zNearPlane">Depth of the near plane.</param>
            <param name="zFarPlane">Depth of the far plane.</param>
            <returns>The new projection <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for customized orthographic view.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new projection <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for customized orthographic view.
            </summary>
            <param name="left">Lower x-value at the near plane.</param>
            <param name="right">Upper x-value at the near plane.</param>
            <param name="bottom">Lower y-coordinate at the near plane.</param>
            <param name="top">Upper y-value at the near plane.</param>
            <param name="zNearPlane">Depth of the near plane.</param>
            <param name="zFarPlane">Depth of the far plane.</param>
            <param name="result">The new projection <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for customized orthographic view as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreatePerspective(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new projection <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for perspective view.
            </summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <returns>The new projection <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for perspective view.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreatePerspective(System.Single,System.Single,System.Single,System.Single,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new projection <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for perspective view.
            </summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <param name="result">The new projection <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for perspective view as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new projection <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for perspective view with field of view.
            </summary>
            <param name="fieldOfView">Field of view in the y direction in radians.</param>
            <param name="aspectRatio">Width divided by height of the viewing volume.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <returns>The new projection <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for perspective view with FOV.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new projection <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for perspective view with field of view.
            </summary>
            <param name="fieldOfView">Field of view in the y direction in radians.</param>
            <param name="aspectRatio">Width divided by height of the viewing volume.</param>
            <param name="nearPlaneDistance">Distance of the near plane.</param>
            <param name="farPlaneDistance">Distance of the far plane.</param>
            <param name="result">The new projection <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for perspective view with FOV as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new projection <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for customized perspective view.
            </summary>
            <param name="left">Lower x-value at the near plane.</param>
            <param name="right">Upper x-value at the near plane.</param>
            <param name="bottom">Lower y-coordinate at the near plane.</param>
            <param name="top">Upper y-value at the near plane.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <returns>The new <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for customized perspective view.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreatePerspectiveOffCenter(Catalyst.Engine.Utilities.Rectangle,System.Single,System.Single)">
            <summary>
            Creates a new projection <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for customized perspective view.
            </summary>
            <param name="viewingVolume">The viewing volume.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <returns>The new <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for customized perspective view.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new projection <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for customized perspective view.
            </summary>
            <param name="left">Lower x-value at the near plane.</param>
            <param name="right">Upper x-value at the near plane.</param>
            <param name="bottom">Lower y-coordinate at the near plane.</param>
            <param name="top">Upper y-value at the near plane.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <param name="result">The new <see cref="T:Catalyst.Engine.Utilities.Matrix"/> for customized perspective view as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateRotationX(System.Single)">
            <summary>
            Creates a new rotation <see cref="T:Catalyst.Engine.Utilities.Matrix"/> around X axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <returns>The rotation <see cref="T:Catalyst.Engine.Utilities.Matrix"/> around X axis.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateRotationX(System.Single,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new rotation <see cref="T:Catalyst.Engine.Utilities.Matrix"/> around X axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <param name="result">The rotation <see cref="T:Catalyst.Engine.Utilities.Matrix"/> around X axis as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateRotationY(System.Single)">
            <summary>
            Creates a new rotation <see cref="T:Catalyst.Engine.Utilities.Matrix"/> around Y axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <returns>The rotation <see cref="T:Catalyst.Engine.Utilities.Matrix"/> around Y axis.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateRotationY(System.Single,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new rotation <see cref="T:Catalyst.Engine.Utilities.Matrix"/> around Y axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <param name="result">The rotation <see cref="T:Catalyst.Engine.Utilities.Matrix"/> around Y axis as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateRotationZ(System.Single)">
            <summary>
            Creates a new rotation <see cref="T:Catalyst.Engine.Utilities.Matrix"/> around Z axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <returns>The rotation <see cref="T:Catalyst.Engine.Utilities.Matrix"/> around Z axis.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateRotationZ(System.Single,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new rotation <see cref="T:Catalyst.Engine.Utilities.Matrix"/> around Z axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <param name="result">The rotation <see cref="T:Catalyst.Engine.Utilities.Matrix"/> around Z axis as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateScale(System.Single)">
            <summary>
            Creates a new scaling <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="scale">Scale value for all three axises.</param>
            <returns>The scaling <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateScale(System.Single,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new scaling <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="scale">Scale value for all three axises.</param>
            <param name="result">The scaling <see cref="T:Catalyst.Engine.Utilities.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateScale(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new scaling <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="xScale">Scale value for X axis.</param>
            <param name="yScale">Scale value for Y axis.</param>
            <param name="zScale">Scale value for Z axis.</param>
            <returns>The scaling <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateScale(System.Single,System.Single,System.Single,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new scaling <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="xScale">Scale value for X axis.</param>
            <param name="yScale">Scale value for Y axis.</param>
            <param name="zScale">Scale value for Z axis.</param>
            <param name="result">The scaling <see cref="T:Catalyst.Engine.Utilities.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateScale(Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Creates a new scaling <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="scales"><see cref="T:Catalyst.Engine.Utilities.Vector3"/> representing x,y and z scale values.</param>
            <returns>The scaling <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateScale(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new scaling <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="scales"><see cref="T:Catalyst.Engine.Utilities.Vector3"/> representing x,y and z scale values.</param>
            <param name="result">The scaling <see cref="T:Catalyst.Engine.Utilities.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateShadow(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Plane)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Matrix"/> that flattens geometry into a specified <see cref="T:Catalyst.Engine.Utilities.Plane"/> as if casting a shadow from a specified light source. 
            </summary>
            <param name="lightDirection">A vector specifying the direction from which the light that will cast the shadow is coming.</param>
            <param name="plane">The plane onto which the new matrix should flatten geometry so as to cast a shadow.</param>
            <returns>A <see cref="T:Catalyst.Engine.Utilities.Matrix"/> that can be used to flatten geometry onto the specified plane from the specified direction. </returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateShadow(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Plane@,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Matrix"/> that flattens geometry into a specified <see cref="T:Catalyst.Engine.Utilities.Plane"/> as if casting a shadow from a specified light source. 
            </summary>
            <param name="lightDirection">A vector specifying the direction from which the light that will cast the shadow is coming.</param>
            <param name="plane">The plane onto which the new matrix should flatten geometry so as to cast a shadow.</param>
            <param name="result">A <see cref="T:Catalyst.Engine.Utilities.Matrix"/> that can be used to flatten geometry onto the specified plane from the specified direction as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateTranslation(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new translation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="xPosition">X coordinate of translation.</param>
            <param name="yPosition">Y coordinate of translation.</param>
            <param name="zPosition">Z coordinate of translation.</param>
            <returns>The translation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateTranslation(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new translation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="position">X,Y and Z coordinates of translation.</param>
            <param name="result">The translation <see cref="T:Catalyst.Engine.Utilities.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateTranslation(Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Creates a new translation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="position">X,Y and Z coordinates of translation.</param>
            <returns>The translation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateTranslation(System.Single,System.Single,System.Single,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new translation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="xPosition">X coordinate of translation.</param>
            <param name="yPosition">Y coordinate of translation.</param>
            <param name="zPosition">Z coordinate of translation.</param>
            <param name="result">The translation <see cref="T:Catalyst.Engine.Utilities.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateReflection(Catalyst.Engine.Utilities.Plane)">
            <summary>
            Creates a new reflection <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="value">The plane that used for reflection calculation.</param>
            <returns>The reflection <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateReflection(Catalyst.Engine.Utilities.Plane@,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new reflection <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="value">The plane that used for reflection calculation.</param>
            <param name="result">The reflection <see cref="T:Catalyst.Engine.Utilities.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateWorld(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Creates a new world <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="position">The position vector.</param>
            <param name="forward">The forward direction vector.</param>
            <param name="up">The upward direction vector. Usually <see cref="P:Catalyst.Engine.Utilities.Vector3.Up"/>.</param>
            <returns>The world <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.CreateWorld(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new world <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="position">The position vector.</param>
            <param name="forward">The forward direction vector.</param>
            <param name="up">The upward direction vector. Usually <see cref="P:Catalyst.Engine.Utilities.Vector3.Up"/>.</param>
            <param name="result">The world <see cref="T:Catalyst.Engine.Utilities.Matrix"/> as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.Decompose(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Decomposes this matrix to translation, rotation and scale elements. Returns <c>true</c> if matrix can be decomposed; <c>false</c> otherwise.
            </summary>
            <param name="scale">Scale vector as an output parameter.</param>
            <param name="rotation">Rotation quaternion as an output parameter.</param>
            <param name="translation">Translation vector as an output parameter.</param>
            <returns><c>true</c> if matrix can be decomposed; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.Determinant">
            <summary>
            Returns a determinant of this <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <returns>Determinant of this <see cref="T:Catalyst.Engine.Utilities.Matrix"/></returns>
            <remarks>See more about determinant here - http://en.wikipedia.org/wiki/Determinant.
            </remarks>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.Divide(Catalyst.Engine.Utilities.Matrix,Catalyst.Engine.Utilities.Matrix)">
            <summary>
            Divides the elements of a <see cref="T:Catalyst.Engine.Utilities.Matrix"/> by the elements of another matrix.
            </summary>
            <param name="matrix1">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="matrix2">Divisor <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <returns>The result of dividing the matrix.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.Divide(Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Divides the elements of a <see cref="T:Catalyst.Engine.Utilities.Matrix"/> by the elements of another matrix.
            </summary>
            <param name="matrix1">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="matrix2">Divisor <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="result">The result of dividing the matrix as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.Divide(Catalyst.Engine.Utilities.Matrix,System.Single)">
            <summary>
            Divides the elements of a <see cref="T:Catalyst.Engine.Utilities.Matrix"/> by a scalar.
            </summary>
            <param name="matrix1">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <returns>The result of dividing a matrix by a scalar.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.Divide(Catalyst.Engine.Utilities.Matrix@,System.Single,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Divides the elements of a <see cref="T:Catalyst.Engine.Utilities.Matrix"/> by a scalar.
            </summary>
            <param name="matrix1">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <param name="result">The result of dividing a matrix by a scalar as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.Equals(Catalyst.Engine.Utilities.Matrix)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/> without any tolerance.
            </summary>
            <param name="other">The <see cref="T:Catalyst.Engine.Utilities.Matrix"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/> without any tolerance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.Invert(Catalyst.Engine.Utilities.Matrix)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Matrix"/> which contains inversion of the specified matrix. 
            </summary>
            <param name="matrix">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <returns>The inverted matrix.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.Invert(Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Matrix"/> which contains inversion of the specified matrix. 
            </summary>
            <param name="matrix">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="result">The inverted matrix as output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.Lerp(Catalyst.Engine.Utilities.Matrix,Catalyst.Engine.Utilities.Matrix,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Matrix"/> that contains linear interpolation of the values in specified matrixes.
            </summary>
            <param name="matrix1">The first <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="matrix2">The second <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <returns>>The result of linear interpolation of the specified matrixes.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.Lerp(Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Matrix@,System.Single,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Matrix"/> that contains linear interpolation of the values in specified matrixes.
            </summary>
            <param name="matrix1">The first <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="matrix2">The second <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <param name="result">The result of linear interpolation of the specified matrixes as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.Multiply(Catalyst.Engine.Utilities.Matrix,Catalyst.Engine.Utilities.Matrix)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Matrix"/> that contains a multiplication of two matrix.
            </summary>
            <param name="matrix1">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="matrix2">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <returns>Result of the matrix multiplication.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.Multiply(Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Matrix"/> that contains a multiplication of two matrix.
            </summary>
            <param name="matrix1">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="matrix2">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="result">Result of the matrix multiplication as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.Multiply(Catalyst.Engine.Utilities.Matrix,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Matrix"/> that contains a multiplication of <see cref="T:Catalyst.Engine.Utilities.Matrix"/> and a scalar.
            </summary>
            <param name="matrix1">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <returns>Result of the matrix multiplication with a scalar.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.Multiply(Catalyst.Engine.Utilities.Matrix@,System.Single,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Matrix"/> that contains a multiplication of <see cref="T:Catalyst.Engine.Utilities.Matrix"/> and a scalar.
            </summary>
            <param name="matrix1">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">Result of the matrix multiplication with a scalar as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.ToFloatArray(Catalyst.Engine.Utilities.Matrix)">
            <summary>
            Copy the values of specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/> to the float array.
            </summary>
            <param name="matrix">The source <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <returns>The array which matrix values will be stored.</returns>
            <remarks>
            Required for OpenGL 2.0 projection matrix stuff.
            </remarks>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.Negate(Catalyst.Engine.Utilities.Matrix)">
            <summary>
            Returns a matrix with the all values negated.
            </summary>
            <param name="matrix">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <returns>Result of the matrix negation.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.Negate(Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Returns a matrix with the all values negated.
            </summary>
            <param name="matrix">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="result">Result of the matrix negation as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.op_Addition(Catalyst.Engine.Utilities.Matrix,Catalyst.Engine.Utilities.Matrix)">
            <summary>
            Adds two matrixes.
            </summary>
            <param name="matrix1">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/> on the left of the add sign.</param>
            <param name="matrix2">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/> on the right of the add sign.</param>
            <returns>Sum of the matrixes.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.op_Division(Catalyst.Engine.Utilities.Matrix,Catalyst.Engine.Utilities.Matrix)">
            <summary>
            Divides the elements of a <see cref="T:Catalyst.Engine.Utilities.Matrix"/> by the elements of another <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="matrix1">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/> on the left of the div sign.</param>
            <param name="matrix2">Divisor <see cref="T:Catalyst.Engine.Utilities.Matrix"/> on the right of the div sign.</param>
            <returns>The result of dividing the matrixes.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.op_Division(Catalyst.Engine.Utilities.Matrix,System.Single)">
            <summary>
            Divides the elements of a <see cref="T:Catalyst.Engine.Utilities.Matrix"/> by a scalar.
            </summary>
            <param name="matrix">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/> on the left of the div sign.</param>
            <param name="divider">Divisor scalar on the right of the div sign.</param>
            <returns>The result of dividing a matrix by a scalar.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.op_Equality(Catalyst.Engine.Utilities.Matrix,Catalyst.Engine.Utilities.Matrix)">
            <summary>
            Compares whether two <see cref="T:Catalyst.Engine.Utilities.Matrix"/> instances are equal without any tolerance.
            </summary>
            <param name="matrix1">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/> on the left of the equal sign.</param>
            <param name="matrix2">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/> on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.op_Inequality(Catalyst.Engine.Utilities.Matrix,Catalyst.Engine.Utilities.Matrix)">
            <summary>
            Compares whether two <see cref="T:Catalyst.Engine.Utilities.Matrix"/> instances are not equal without any tolerance.
            </summary>
            <param name="matrix1">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/> on the left of the not equal sign.</param>
            <param name="matrix2">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/> on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.op_Multiply(Catalyst.Engine.Utilities.Matrix,Catalyst.Engine.Utilities.Matrix)">
            <summary>
            Multiplies two matrixes.
            </summary>
            <param name="matrix1">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/> on the left of the mul sign.</param>
            <param name="matrix2">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/> on the right of the mul sign.</param>
            <returns>Result of the matrix multiplication.</returns>
            <remarks>
            Using matrix multiplication algorithm - see http://en.wikipedia.org/wiki/Matrix_multiplication.
            </remarks>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.op_Multiply(Catalyst.Engine.Utilities.Matrix,System.Single)">
            <summary>
            Multiplies the elements of matrix by a scalar.
            </summary>
            <param name="matrix">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/> on the left of the mul sign.</param>
            <param name="scaleFactor">Scalar value on the right of the mul sign.</param>
            <returns>Result of the matrix multiplication with a scalar.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.op_Subtraction(Catalyst.Engine.Utilities.Matrix,Catalyst.Engine.Utilities.Matrix)">
            <summary>
            Subtracts the values of one <see cref="T:Catalyst.Engine.Utilities.Matrix"/> from another <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="matrix1">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/> on the left of the sub sign.</param>
            <param name="matrix2">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/> on the right of the sub sign.</param>
            <returns>Result of the matrix subtraction.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.op_UnaryNegation(Catalyst.Engine.Utilities.Matrix)">
            <summary>
            Inverts values in the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="matrix">Source <see cref="T:Catalyst.Engine.Utilities.Matrix"/> on the right of the sub sign.</param>
            <returns>Result of the inversion.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.Subtract(Catalyst.Engine.Utilities.Matrix,Catalyst.Engine.Utilities.Matrix)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Matrix"/> that contains subtraction of one matrix from another.
            </summary>
            <param name="matrix1">The first <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="matrix2">The second <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <returns>The result of the matrix subtraction.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.Subtract(Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Matrix"/> that contains subtraction of one matrix from another.
            </summary>
            <param name="matrix1">The first <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="matrix2">The second <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="result">The result of the matrix subtraction as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Catalyst.Engine.Utilities.Matrix"/> in the format:
            {M11:[<see cref="F:Catalyst.Engine.Utilities.Matrix.M11"/>] M12:[<see cref="F:Catalyst.Engine.Utilities.Matrix.M12"/>] M13:[<see cref="F:Catalyst.Engine.Utilities.Matrix.M13"/>] M14:[<see cref="F:Catalyst.Engine.Utilities.Matrix.M14"/>]}
            {M21:[<see cref="F:Catalyst.Engine.Utilities.Matrix.M21"/>] M12:[<see cref="F:Catalyst.Engine.Utilities.Matrix.M22"/>] M13:[<see cref="F:Catalyst.Engine.Utilities.Matrix.M23"/>] M14:[<see cref="F:Catalyst.Engine.Utilities.Matrix.M24"/>]}
            {M31:[<see cref="F:Catalyst.Engine.Utilities.Matrix.M31"/>] M32:[<see cref="F:Catalyst.Engine.Utilities.Matrix.M32"/>] M33:[<see cref="F:Catalyst.Engine.Utilities.Matrix.M33"/>] M34:[<see cref="F:Catalyst.Engine.Utilities.Matrix.M34"/>]}
            {M41:[<see cref="F:Catalyst.Engine.Utilities.Matrix.M41"/>] M42:[<see cref="F:Catalyst.Engine.Utilities.Matrix.M42"/>] M43:[<see cref="F:Catalyst.Engine.Utilities.Matrix.M43"/>] M44:[<see cref="F:Catalyst.Engine.Utilities.Matrix.M44"/>]}
            </summary>
            <returns>A <see cref="T:System.String"/> representation of this <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.Transpose(Catalyst.Engine.Utilities.Matrix)">
            <summary>
            Swap the matrix rows and columns.
            </summary>
            <param name="matrix">The matrix for transposing operation.</param>
            <returns>The new <see cref="T:Catalyst.Engine.Utilities.Matrix"/> which contains the transposing result.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.Transpose(Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Matrix@)">
            <summary>
            Swap the matrix rows and columns.
            </summary>
            <param name="matrix">The matrix for transposing operation.</param>
            <param name="result">The new <see cref="T:Catalyst.Engine.Utilities.Matrix"/> which contains the transposing result as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Matrix.FindDeterminants(Catalyst.Engine.Utilities.Matrix@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Helper method for using the Laplace expansion theorem using two rows expansions to calculate major and 
            minor determinants of a 4x4 matrix. This method is used for inverting a matrix.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.PlaneHelper.ClassifyPoint(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Plane@)">
            <summary>
            Returns a value indicating what side (positive/negative) of a plane a point is
            </summary>
            <param name="point">The point to check with</param>
            <param name="plane">The plane to check against</param>
            <returns>Greater than zero if on the positive side, less than zero if on the negative size, 0 otherwise</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.PlaneHelper.PerpendicularDistance(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Plane@)">
            <summary>
            Returns the perpendicular distance from a point to a plane
            </summary>
            <param name="point">The point to check</param>
            <param name="plane">The place to check</param>
            <returns>The perpendicular distance from the point to the plane</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Plane.#ctor(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Create a <see cref="T:Catalyst.Engine.Utilities.Plane"/> that contains the specified point and has the specified <see cref="F:Catalyst.Engine.Utilities.Plane.Normal"/> vector.
            </summary>
            <param name="pointOnPlane">A point the created <see cref="T:Catalyst.Engine.Utilities.Plane"/> should contain.</param>
            <param name="normal">The normal of the plane.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Plane.Transform(Catalyst.Engine.Utilities.Plane,Catalyst.Engine.Utilities.Matrix)">
            <summary>
            Transforms a normalized plane by a matrix.
            </summary>
            <param name="plane">The normalized plane to transform.</param>
            <param name="matrix">The transformation matrix.</param>
            <returns>The transformed plane.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Plane.Transform(Catalyst.Engine.Utilities.Plane@,Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Plane@)">
            <summary>
            Transforms a normalized plane by a matrix.
            </summary>
            <param name="plane">The normalized plane to transform.</param>
            <param name="matrix">The transformation matrix.</param>
            <param name="result">The transformed plane.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Plane.Transform(Catalyst.Engine.Utilities.Plane,Catalyst.Engine.Utilities.Quaternion)">
            <summary>
            Transforms a normalized plane by a quaternion rotation.
            </summary>
            <param name="plane">The normalized plane to transform.</param>
            <param name="rotation">The quaternion rotation.</param>
            <returns>The transformed plane.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Plane.Transform(Catalyst.Engine.Utilities.Plane@,Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Plane@)">
            <summary>
            Transforms a normalized plane by a quaternion rotation.
            </summary>
            <param name="plane">The normalized plane to transform.</param>
            <param name="rotation">The quaternion rotation.</param>
            <param name="result">The transformed plane.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Plane.Deconstruct(Catalyst.Engine.Utilities.Vector3@,System.Single@)">
            <summary>
            Deconstruction method for <see cref="T:Catalyst.Engine.Utilities.Plane"/>.
            </summary>
            <param name="normal"></param>
            <param name="d"></param>
        </member>
        <member name="T:Catalyst.Engine.Utilities.Point">
            <summary>
            Describes a 2D-point.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Point.X">
            <summary>
            The x coordinate of this <see cref="T:Catalyst.Engine.Utilities.Point"/>.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Point.Y">
            <summary>
            The y coordinate of this <see cref="T:Catalyst.Engine.Utilities.Point"/>.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Point.Zero">
            <summary>
            Returns a <see cref="T:Catalyst.Engine.Utilities.Point"/> with coordinates 0, 0.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Point.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs a point with X and Y from two values.
            </summary>
            <param name="x">The x coordinate in 2d-space.</param>
            <param name="y">The y coordinate in 2d-space.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Point.#ctor(System.Int32)">
            <summary>
            Constructs a point with X and Y set to the same value.
            </summary>
            <param name="value">The x and y coordinates in 2d-space.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Point.op_Addition(Catalyst.Engine.Utilities.Point,Catalyst.Engine.Utilities.Point)">
            <summary>
            Adds two points.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Point"/> on the left of the add sign.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Point"/> on the right of the add sign.</param>
            <returns>Sum of the points.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Point.op_Subtraction(Catalyst.Engine.Utilities.Point,Catalyst.Engine.Utilities.Point)">
            <summary>
            Subtracts a <see cref="T:Catalyst.Engine.Utilities.Point"/> from a <see cref="T:Catalyst.Engine.Utilities.Point"/>.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Point"/> on the left of the sub sign.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Point"/> on the right of the sub sign.</param>
            <returns>Result of the subtraction.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Point.op_Multiply(Catalyst.Engine.Utilities.Point,Catalyst.Engine.Utilities.Point)">
            <summary>
            Multiplies the components of two points by each other.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Point"/> on the left of the mul sign.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Point"/> on the right of the mul sign.</param>
            <returns>Result of the multiplication.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Point.op_Division(Catalyst.Engine.Utilities.Point,Catalyst.Engine.Utilities.Point)">
            <summary>
            Divides the components of a <see cref="T:Catalyst.Engine.Utilities.Point"/> by the components of another <see cref="T:Catalyst.Engine.Utilities.Point"/>.
            </summary>
            <param name="source">Source <see cref="T:Catalyst.Engine.Utilities.Point"/> on the left of the div sign.</param>
            <param name="divisor">Divisor <see cref="T:Catalyst.Engine.Utilities.Point"/> on the right of the div sign.</param>
            <returns>The result of dividing the points.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Point.op_Equality(Catalyst.Engine.Utilities.Point,Catalyst.Engine.Utilities.Point)">
            <summary>
            Compares whether two <see cref="T:Catalyst.Engine.Utilities.Point"/> instances are equal.
            </summary>
            <param name="a"><see cref="T:Catalyst.Engine.Utilities.Point"/> instance on the left of the equal sign.</param>
            <param name="b"><see cref="T:Catalyst.Engine.Utilities.Point"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Point.op_Inequality(Catalyst.Engine.Utilities.Point,Catalyst.Engine.Utilities.Point)">
            <summary>
            Compares whether two <see cref="T:Catalyst.Engine.Utilities.Point"/> instances are not equal.
            </summary>
            <param name="a"><see cref="T:Catalyst.Engine.Utilities.Point"/> instance on the left of the not equal sign.</param>
            <param name="b"><see cref="T:Catalyst.Engine.Utilities.Point"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>	
        </member>
        <member name="M:Catalyst.Engine.Utilities.Point.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Point.Equals(Catalyst.Engine.Utilities.Point)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Catalyst.Engine.Utilities.Point"/>.
            </summary>
            <param name="other">The <see cref="T:Catalyst.Engine.Utilities.Point"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Point.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Catalyst.Engine.Utilities.Point"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Catalyst.Engine.Utilities.Point"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Point.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Catalyst.Engine.Utilities.Point"/> in the format:
            {X:[<see cref="F:Catalyst.Engine.Utilities.Point.X"/>] Y:[<see cref="F:Catalyst.Engine.Utilities.Point.Y"/>]}
            </summary>
            <returns><see cref="T:System.String"/> representation of this <see cref="T:Catalyst.Engine.Utilities.Point"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Point.ToVector2">
            <summary>
            Gets a <see cref="T:Catalyst.Engine.Utilities.Vector2"/> representation for this object.
            </summary>
            <returns>A <see cref="T:Catalyst.Engine.Utilities.Vector2"/> representation for this object.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Point.Deconstruct(System.Int32@,System.Int32@)">
            <summary>
            Deconstruction method for <see cref="T:Catalyst.Engine.Utilities.Point"/>.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="T:Catalyst.Engine.Utilities.Quaternion">
            <summary>
            An efficient mathematical representation for three dimensional rotations.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Quaternion.X">
            <summary>
            The x coordinate of this <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Quaternion.Y">
            <summary>
            The y coordinate of this <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Quaternion.Z">
            <summary>
            The z coordinate of this <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Quaternion.W">
            <summary>
            The rotation component of this <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a quaternion with X, Y, Z and W from four values.
            </summary>
            <param name="x">The x coordinate in 3d-space.</param>
            <param name="y">The y coordinate in 3d-space.</param>
            <param name="z">The z coordinate in 3d-space.</param>
            <param name="w">The rotation component.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.#ctor(Catalyst.Engine.Utilities.Vector3,System.Single)">
            <summary>
            Constructs a quaternion with X, Y, Z from <see cref="T:Catalyst.Engine.Utilities.Vector3"/> and rotation component from a scalar.
            </summary>
            <param name="value">The x, y, z coordinates in 3d-space.</param>
            <param name="w">The rotation component.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.#ctor(Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Constructs a quaternion from <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.
            </summary>
            <param name="value">The x, y, z coordinates in 3d-space and the rotation component.</param>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Quaternion.Identity">
            <summary>
            Returns a quaternion representing no rotation.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Add(Catalyst.Engine.Utilities.Quaternion,Catalyst.Engine.Utilities.Quaternion)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> that contains the sum of two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <returns>The result of the quaternion addition.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Add(Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> that contains the sum of two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <param name="result">The result of the quaternion addition as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Concatenate(Catalyst.Engine.Utilities.Quaternion,Catalyst.Engine.Utilities.Quaternion)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> that contains concatenation between two quaternion.
            </summary>
            <param name="value1">The first <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> to concatenate.</param>
            <param name="value2">The second <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> to concatenate.</param>
            <returns>The result of rotation of <paramref name="value1"/> followed by <paramref name="value2"/> rotation.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Concatenate(Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> that contains concatenation between two quaternion.
            </summary>
            <param name="value1">The first <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> to concatenate.</param>
            <param name="value2">The second <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> to concatenate.</param>
            <param name="result">The result of rotation of <paramref name="value1"/> followed by <paramref name="value2"/> rotation as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Conjugate">
            <summary>
            Transforms this quaternion into its conjugated version.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Conjugate(Catalyst.Engine.Utilities.Quaternion)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> that contains conjugated version of the specified quaternion.
            </summary>
            <param name="value">The quaternion which values will be used to create the conjugated version.</param>
            <returns>The conjugate version of the specified quaternion.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Conjugate(Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> that contains conjugated version of the specified quaternion.
            </summary>
            <param name="value">The quaternion which values will be used to create the conjugated version.</param>
            <param name="result">The conjugated version of the specified quaternion as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.CreateFromAxisAngle(Catalyst.Engine.Utilities.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> from the specified axis and angle.
            </summary>
            <param name="axis">The axis of rotation.</param>
            <param name="angle">The angle in radians.</param>
            <returns>The new quaternion builded from axis and angle.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.CreateFromAxisAngle(Catalyst.Engine.Utilities.Vector3@,System.Single,Catalyst.Engine.Utilities.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> from the specified axis and angle.
            </summary>
            <param name="axis">The axis of rotation.</param>
            <param name="angle">The angle in radians.</param>
            <param name="result">The new quaternion builded from axis and angle as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.CreateFromRotationMatrix(Catalyst.Engine.Utilities.Matrix)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> from the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="matrix">The rotation matrix.</param>
            <returns>A quaternion composed from the rotation part of the matrix.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.CreateFromRotationMatrix(Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> from the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="matrix">The rotation matrix.</param>
            <param name="result">A quaternion composed from the rotation part of the matrix as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> from the specified yaw, pitch and roll angles.
            </summary>
            <param name="yaw">Yaw around the y axis in radians.</param>
            <param name="pitch">Pitch around the x axis in radians.</param>
            <param name="roll">Roll around the z axis in radians.</param>
            <returns>A new quaternion from the concatenated yaw, pitch, and roll angles.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single,Catalyst.Engine.Utilities.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> from the specified yaw, pitch and roll angles.
            </summary>
            <param name="yaw">Yaw around the y axis in radians.</param>
            <param name="pitch">Pitch around the x axis in radians.</param>
            <param name="roll">Roll around the z axis in radians.</param>
            <param name="result">A new quaternion from the concatenated yaw, pitch, and roll angles as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Divide(Catalyst.Engine.Utilities.Quaternion,Catalyst.Engine.Utilities.Quaternion)">
            <summary>
            Divides a <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> by the other <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.
            </summary>
            <param name="quaternion1">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <param name="quaternion2">Divisor <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <returns>The result of dividing the quaternions.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Divide(Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Quaternion@)">
            <summary>
            Divides a <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> by the other <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.
            </summary>
            <param name="quaternion1">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <param name="quaternion2">Divisor <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <param name="result">The result of dividing the quaternions as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Dot(Catalyst.Engine.Utilities.Quaternion,Catalyst.Engine.Utilities.Quaternion)">
            <summary>
            Returns a dot product of two quaternions.
            </summary>
            <param name="quaternion1">The first quaternion.</param>
            <param name="quaternion2">The second quaternion.</param>
            <returns>The dot product of two quaternions.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Dot(Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Quaternion@,System.Single@)">
            <summary>
            Returns a dot product of two quaternions.
            </summary>
            <param name="quaternion1">The first quaternion.</param>
            <param name="quaternion2">The second quaternion.</param>
            <param name="result">The dot product of two quaternions as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Equals(Catalyst.Engine.Utilities.Quaternion)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.
            </summary>
            <param name="other">The <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Inverse(Catalyst.Engine.Utilities.Quaternion)">
            <summary>
            Returns the inverse quaternion which represents the opposite rotation.
            </summary>
            <param name="quaternion">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <returns>The inverse quaternion.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Inverse(Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Quaternion@)">
            <summary>
            Returns the inverse quaternion which represents the opposite rotation.
            </summary>
            <param name="quaternion">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <param name="result">The inverse quaternion as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Length">
            <summary>
            Returns the magnitude of the quaternion components.
            </summary>
            <returns>The magnitude of the quaternion components.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.LengthSquared">
            <summary>
            Returns the squared magnitude of the quaternion components.
            </summary>
            <returns>The squared magnitude of the quaternion components.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Lerp(Catalyst.Engine.Utilities.Quaternion,Catalyst.Engine.Utilities.Quaternion,System.Single)">
            <summary>
            Performs a linear blend between two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <param name="amount">The blend amount where 0 returns <paramref name="quaternion1"/> and 1 <paramref name="quaternion2"/>.</param>
            <returns>The result of linear blending between two quaternions.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Lerp(Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Quaternion@,System.Single,Catalyst.Engine.Utilities.Quaternion@)">
            <summary>
            Performs a linear blend between two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <param name="amount">The blend amount where 0 returns <paramref name="quaternion1"/> and 1 <paramref name="quaternion2"/>.</param>
            <param name="result">The result of linear blending between two quaternions as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Slerp(Catalyst.Engine.Utilities.Quaternion,Catalyst.Engine.Utilities.Quaternion,System.Single)">
            <summary>
            Performs a spherical linear blend between two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <param name="amount">The blend amount where 0 returns <paramref name="quaternion1"/> and 1 <paramref name="quaternion2"/>.</param>
            <returns>The result of spherical linear blending between two quaternions.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Slerp(Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Quaternion@,System.Single,Catalyst.Engine.Utilities.Quaternion@)">
            <summary>
            Performs a spherical linear blend between two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <param name="amount">The blend amount where 0 returns <paramref name="quaternion1"/> and 1 <paramref name="quaternion2"/>.</param>
            <param name="result">The result of spherical linear blending between two quaternions as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Subtract(Catalyst.Engine.Utilities.Quaternion,Catalyst.Engine.Utilities.Quaternion)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> that contains subtraction of one <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> from another.
            </summary>
            <param name="quaternion1">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <returns>The result of the quaternion subtraction.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Subtract(Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> that contains subtraction of one <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> from another.
            </summary>
            <param name="quaternion1">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <param name="result">The result of the quaternion subtraction as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Multiply(Catalyst.Engine.Utilities.Quaternion,Catalyst.Engine.Utilities.Quaternion)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> that contains a multiplication of two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <returns>The result of the quaternion multiplication.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Multiply(Catalyst.Engine.Utilities.Quaternion,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> that contains a multiplication of <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> and a scalar.
            </summary>
            <param name="quaternion1">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <returns>The result of the quaternion multiplication with a scalar.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Multiply(Catalyst.Engine.Utilities.Quaternion@,System.Single,Catalyst.Engine.Utilities.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> that contains a multiplication of <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> and a scalar.
            </summary>
            <param name="quaternion1">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">The result of the quaternion multiplication with a scalar as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Multiply(Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Quaternion@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> that contains a multiplication of two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <param name="result">The result of the quaternion multiplication as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Negate(Catalyst.Engine.Utilities.Quaternion)">
            <summary>
            Flips the sign of the all the quaternion components.
            </summary>
            <param name="quaternion">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <returns>The result of the quaternion negation.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Negate(Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Quaternion@)">
            <summary>
            Flips the sign of the all the quaternion components.
            </summary>
            <param name="quaternion">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <param name="result">The result of the quaternion negation as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Normalize">
            <summary>
            Scales the quaternion magnitude to unit length.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Normalize(Catalyst.Engine.Utilities.Quaternion)">
            <summary>
            Scales the quaternion magnitude to unit length.
            </summary>
            <param name="quaternion">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <returns>The unit length quaternion.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.Normalize(Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Quaternion@)">
            <summary>
            Scales the quaternion magnitude to unit length.
            </summary>
            <param name="quaternion">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</param>
            <param name="result">The unit length quaternion an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> in the format:
            {X:[<see cref="F:Catalyst.Engine.Utilities.Quaternion.X"/>] Y:[<see cref="F:Catalyst.Engine.Utilities.Quaternion.Y"/>] Z:[<see cref="F:Catalyst.Engine.Utilities.Quaternion.Z"/>] W:[<see cref="F:Catalyst.Engine.Utilities.Quaternion.W"/>]}
            </summary>
            <returns>A <see cref="T:System.String"/> representation of this <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.ToVector4">
            <summary>
            Gets a <see cref="T:Catalyst.Engine.Utilities.Vector4"/> representation for this object.
            </summary>
            <returns>A <see cref="T:Catalyst.Engine.Utilities.Vector4"/> representation for this object.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.op_Addition(Catalyst.Engine.Utilities.Quaternion,Catalyst.Engine.Utilities.Quaternion)">
            <summary>
            Adds two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> on the left of the add sign.</param>
            <param name="quaternion2">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> on the right of the add sign.</param>
            <returns>Sum of the vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.op_Division(Catalyst.Engine.Utilities.Quaternion,Catalyst.Engine.Utilities.Quaternion)">
            <summary>
            Divides a <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> by the other <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.
            </summary>
            <param name="quaternion1">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> on the left of the div sign.</param>
            <param name="quaternion2">Divisor <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> on the right of the div sign.</param>
            <returns>The result of dividing the quaternions.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.op_Equality(Catalyst.Engine.Utilities.Quaternion,Catalyst.Engine.Utilities.Quaternion)">
            <summary>
            Compares whether two <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> instances are equal.
            </summary>
            <param name="quaternion1"><see cref="T:Catalyst.Engine.Utilities.Quaternion"/> instance on the left of the equal sign.</param>
            <param name="quaternion2"><see cref="T:Catalyst.Engine.Utilities.Quaternion"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.op_Inequality(Catalyst.Engine.Utilities.Quaternion,Catalyst.Engine.Utilities.Quaternion)">
            <summary>
            Compares whether two <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> instances are not equal.
            </summary>
            <param name="quaternion1"><see cref="T:Catalyst.Engine.Utilities.Quaternion"/> instance on the left of the not equal sign.</param>
            <param name="quaternion2"><see cref="T:Catalyst.Engine.Utilities.Quaternion"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.op_Multiply(Catalyst.Engine.Utilities.Quaternion,Catalyst.Engine.Utilities.Quaternion)">
            <summary>
            Multiplies two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> on the left of the mul sign.</param>
            <param name="quaternion2">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> on the right of the mul sign.</param>
            <returns>Result of the quaternions multiplication.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.op_Multiply(Catalyst.Engine.Utilities.Quaternion,System.Single)">
            <summary>
            Multiplies the components of quaternion by a scalar.
            </summary>
            <param name="quaternion1">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/> on the left of the mul sign.</param>
            <param name="scaleFactor">Scalar value on the right of the mul sign.</param>
            <returns>Result of the quaternion multiplication with a scalar.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.op_Subtraction(Catalyst.Engine.Utilities.Quaternion,Catalyst.Engine.Utilities.Quaternion)">
            <summary>
            Subtracts a <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> from a <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.
            </summary>
            <param name="quaternion1">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/> on the left of the sub sign.</param>
            <param name="quaternion2">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/> on the right of the sub sign.</param>
            <returns>Result of the quaternion subtraction.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Quaternion.op_UnaryNegation(Catalyst.Engine.Utilities.Quaternion)">
            <summary>
            Flips the sign of the all the quaternion components.
            </summary>
            <param name="quaternion">Source <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> on the right of the sub sign.</param>
            <returns>The result of the quaternion negation.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Ray.Deconstruct(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Deconstruction method for <see cref="T:Catalyst.Engine.Utilities.Ray"/>.
            </summary>
            <param name="position">Receives the start position of the ray.</param>
            <param name="direction">Receives the direction of the ray.</param>
        </member>
        <member name="T:Catalyst.Engine.Utilities.Rectangle">
            <summary>
            Describes a 2D-rectangle. 
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Rectangle.X">
            <summary>
            The x coordinate of the top-left corner of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Rectangle.Y">
            <summary>
            The y coordinate of the top-left corner of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Rectangle.Width">
            <summary>
            The width of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Rectangle.Height">
            <summary>
            The height of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Rectangle.Empty">
            <summary>
            Returns a <see cref="T:Catalyst.Engine.Utilities.Rectangle"/> with X=0, Y=0, Width=0, Height=0.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Rectangle.Left">
            <summary>
            Returns the x coordinate of the left edge of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Rectangle.Right">
            <summary>
            Returns the x coordinate of the right edge of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Rectangle.Top">
            <summary>
            Returns the y coordinate of the top edge of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Rectangle.Bottom">
            <summary>
            Returns the y coordinate of the bottom edge of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Rectangle.IsEmpty">
            <summary>
            Whether or not this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/> has a <see cref="F:Catalyst.Engine.Utilities.Rectangle.Width"/> and
            <see cref="F:Catalyst.Engine.Utilities.Rectangle.Height"/> of 0, and a <see cref="P:Catalyst.Engine.Utilities.Rectangle.Location"/> of (0, 0).
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Rectangle.Location">
            <summary>
            The top-left coordinates of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Rectangle.Size">
            <summary>
            The width-height coordinates of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Rectangle.Center">
            <summary>
            A <see cref="T:Catalyst.Engine.Utilities.Point"/> located in the center of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.
            </summary>
            <remarks>
            If <see cref="F:Catalyst.Engine.Utilities.Rectangle.Width"/> or <see cref="F:Catalyst.Engine.Utilities.Rectangle.Height"/> is an odd number,
            the center point will be rounded down.
            </remarks>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new instance of <see cref="T:Catalyst.Engine.Utilities.Rectangle"/> struct, with the specified
            position, width, and height.
            </summary>
            <param name="x">The x coordinate of the top-left corner of the created <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
            <param name="y">The y coordinate of the top-left corner of the created <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
            <param name="width">The width of the created <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
            <param name="height">The height of the created <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.#ctor(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Creates a new instance of <see cref="T:Catalyst.Engine.Utilities.Rectangle"/> struct, with the specified
            position, width, and height.
            </summary>
            <param name="x">The x coordinate of the top-left corner of the created <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
            <param name="y">The y coordinate of the top-left corner of the created <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
            <param name="width">The width of the created <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
            <param name="height">The height of the created <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.#ctor(Catalyst.Engine.Utilities.Point,Catalyst.Engine.Utilities.Point)">
            <summary>
            Creates a new instance of <see cref="T:Catalyst.Engine.Utilities.Rectangle"/> struct, with the specified
            location and size.
            </summary>
            <param name="location">The x and y coordinates of the top-left corner of the created <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
            <param name="size">The width and height of the created <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.op_Equality(Catalyst.Engine.Utilities.Rectangle,Catalyst.Engine.Utilities.Rectangle)">
            <summary>
            Compares whether two <see cref="T:Catalyst.Engine.Utilities.Rectangle"/> instances are equal.
            </summary>
            <param name="a"><see cref="T:Catalyst.Engine.Utilities.Rectangle"/> instance on the left of the equal sign.</param>
            <param name="b"><see cref="T:Catalyst.Engine.Utilities.Rectangle"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.op_Inequality(Catalyst.Engine.Utilities.Rectangle,Catalyst.Engine.Utilities.Rectangle)">
            <summary>
            Compares whether two <see cref="T:Catalyst.Engine.Utilities.Rectangle"/> instances are not equal.
            </summary>
            <param name="a"><see cref="T:Catalyst.Engine.Utilities.Rectangle"/> instance on the left of the not equal sign.</param>
            <param name="b"><see cref="T:Catalyst.Engine.Utilities.Rectangle"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.Contains(System.Int32,System.Int32)">
            <summary>
            Gets whether or not the provided coordinates lie within the bounds of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.
            </summary>
            <param name="x">The x coordinate of the point to check for containment.</param>
            <param name="y">The y coordinate of the point to check for containment.</param>
            <returns><c>true</c> if the provided coordinates lie inside this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.Contains(System.Single,System.Single)">
            <summary>
            Gets whether or not the provided coordinates lie within the bounds of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.
            </summary>
            <param name="x">The x coordinate of the point to check for containment.</param>
            <param name="y">The y coordinate of the point to check for containment.</param>
            <returns><c>true</c> if the provided coordinates lie inside this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.Contains(Catalyst.Engine.Utilities.Point)">
            <summary>
            Gets whether or not the provided <see cref="T:Catalyst.Engine.Utilities.Point"/> lies within the bounds of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.
            </summary>
            <param name="value">The coordinates to check for inclusion in this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
            <returns><c>true</c> if the provided <see cref="T:Catalyst.Engine.Utilities.Point"/> lies inside this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.Contains(Catalyst.Engine.Utilities.Point@,System.Boolean@)">
            <summary>
            Gets whether or not the provided <see cref="T:Catalyst.Engine.Utilities.Point"/> lies within the bounds of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.
            </summary>
            <param name="value">The coordinates to check for inclusion in this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
            <param name="result"><c>true</c> if the provided <see cref="T:Catalyst.Engine.Utilities.Point"/> lies inside this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>; <c>false</c> otherwise. As an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.Contains(Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Gets whether or not the provided <see cref="T:Catalyst.Engine.Utilities.Vector2"/> lies within the bounds of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.
            </summary>
            <param name="value">The coordinates to check for inclusion in this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
            <returns><c>true</c> if the provided <see cref="T:Catalyst.Engine.Utilities.Vector2"/> lies inside this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.Contains(Catalyst.Engine.Utilities.Vector2@,System.Boolean@)">
            <summary>
            Gets whether or not the provided <see cref="T:Catalyst.Engine.Utilities.Vector2"/> lies within the bounds of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.
            </summary>
            <param name="value">The coordinates to check for inclusion in this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
            <param name="result"><c>true</c> if the provided <see cref="T:Catalyst.Engine.Utilities.Vector2"/> lies inside this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>; <c>false</c> otherwise. As an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.Contains(Catalyst.Engine.Utilities.Rectangle)">
            <summary>
            Gets whether or not the provided <see cref="T:Catalyst.Engine.Utilities.Rectangle"/> lies within the bounds of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.
            </summary>
            <param name="value">The <see cref="T:Catalyst.Engine.Utilities.Rectangle"/> to check for inclusion in this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
            <returns><c>true</c> if the provided <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>'s bounds lie entirely inside this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.Contains(Catalyst.Engine.Utilities.Rectangle@,System.Boolean@)">
            <summary>
            Gets whether or not the provided <see cref="T:Catalyst.Engine.Utilities.Rectangle"/> lies within the bounds of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.
            </summary>
            <param name="value">The <see cref="T:Catalyst.Engine.Utilities.Rectangle"/> to check for inclusion in this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
            <param name="result"><c>true</c> if the provided <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>'s bounds lie entirely inside this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>; <c>false</c> otherwise. As an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.Equals(Catalyst.Engine.Utilities.Rectangle)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.
            </summary>
            <param name="other">The <see cref="T:Catalyst.Engine.Utilities.Rectangle"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.Inflate(System.Int32,System.Int32)">
            <summary>
            Adjusts the edges of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/> by specified horizontal and vertical amounts. 
            </summary>
            <param name="horizontalAmount">Value to adjust the left and right edges.</param>
            <param name="verticalAmount">Value to adjust the top and bottom edges.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.Inflate(System.Single,System.Single)">
            <summary>
            Adjusts the edges of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/> by specified horizontal and vertical amounts. 
            </summary>
            <param name="horizontalAmount">Value to adjust the left and right edges.</param>
            <param name="verticalAmount">Value to adjust the top and bottom edges.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.Intersects(Catalyst.Engine.Utilities.Rectangle)">
            <summary>
            Gets whether or not the other <see cref="T:Catalyst.Engine.Utilities.Rectangle"/> intersects with this rectangle.
            </summary>
            <param name="value">The other rectangle for testing.</param>
            <returns><c>true</c> if other <see cref="T:Catalyst.Engine.Utilities.Rectangle"/> intersects with this rectangle; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.Intersects(Catalyst.Engine.Utilities.Rectangle@,System.Boolean@)">
            <summary>
            Gets whether or not the other <see cref="T:Catalyst.Engine.Utilities.Rectangle"/> intersects with this rectangle.
            </summary>
            <param name="value">The other rectangle for testing.</param>
            <param name="result"><c>true</c> if other <see cref="T:Catalyst.Engine.Utilities.Rectangle"/> intersects with this rectangle; <c>false</c> otherwise. As an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.Intersect(Catalyst.Engine.Utilities.Rectangle,Catalyst.Engine.Utilities.Rectangle)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Rectangle"/> that contains overlapping region of two other rectangles.
            </summary>
            <param name="value1">The first <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
            <param name="value2">The second <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
            <returns>Overlapping region of the two rectangles.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.Intersect(Catalyst.Engine.Utilities.Rectangle@,Catalyst.Engine.Utilities.Rectangle@,Catalyst.Engine.Utilities.Rectangle@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Rectangle"/> that contains overlapping region of two other rectangles.
            </summary>
            <param name="value1">The first <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
            <param name="value2">The second <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
            <param name="result">Overlapping region of the two rectangles as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.Offset(System.Int32,System.Int32)">
            <summary>
            Changes the <see cref="P:Catalyst.Engine.Utilities.Rectangle.Location"/> of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.
            </summary>
            <param name="offsetX">The x coordinate to add to this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
            <param name="offsetY">The y coordinate to add to this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.Offset(System.Single,System.Single)">
            <summary>
            Changes the <see cref="P:Catalyst.Engine.Utilities.Rectangle.Location"/> of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.
            </summary>
            <param name="offsetX">The x coordinate to add to this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
            <param name="offsetY">The y coordinate to add to this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.Offset(Catalyst.Engine.Utilities.Point)">
            <summary>
            Changes the <see cref="P:Catalyst.Engine.Utilities.Rectangle.Location"/> of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.
            </summary>
            <param name="amount">The x and y components to add to this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.Offset(Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Changes the <see cref="P:Catalyst.Engine.Utilities.Rectangle.Location"/> of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.
            </summary>
            <param name="amount">The x and y components to add to this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/> in the format:
            {X:[<see cref="F:Catalyst.Engine.Utilities.Rectangle.X"/>] Y:[<see cref="F:Catalyst.Engine.Utilities.Rectangle.Y"/>] Width:[<see cref="F:Catalyst.Engine.Utilities.Rectangle.Width"/>] Height:[<see cref="F:Catalyst.Engine.Utilities.Rectangle.Height"/>]}
            </summary>
            <returns><see cref="T:System.String"/> representation of this <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.Union(Catalyst.Engine.Utilities.Rectangle,Catalyst.Engine.Utilities.Rectangle)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Rectangle"/> that completely contains two other rectangles.
            </summary>
            <param name="value1">The first <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
            <param name="value2">The second <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
            <returns>The union of the two rectangles.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.Union(Catalyst.Engine.Utilities.Rectangle@,Catalyst.Engine.Utilities.Rectangle@,Catalyst.Engine.Utilities.Rectangle@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Rectangle"/> that completely contains two other rectangles.
            </summary>
            <param name="value1">The first <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
            <param name="value2">The second <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.</param>
            <param name="result">The union of the two rectangles as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Rectangle.Deconstruct(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Deconstruction method for <see cref="T:Catalyst.Engine.Utilities.Rectangle"/>.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="T:Catalyst.Engine.Utilities.Vector2">
            <summary>
            Describes a 2D-vector.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Vector2.X">
            <summary>
            The x coordinate of this <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Vector2.Y">
            <summary>
            The y coordinate of this <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Vector2.Zero">
            <summary>
            Returns a <see cref="T:Catalyst.Engine.Utilities.Vector2"/> with components 0, 0.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Vector2.One">
            <summary>
            Returns a <see cref="T:Catalyst.Engine.Utilities.Vector2"/> with components 1, 1.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Vector2.UnitX">
            <summary>
            Returns a <see cref="T:Catalyst.Engine.Utilities.Vector2"/> with components 1, 0.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Vector2.UnitY">
            <summary>
            Returns a <see cref="T:Catalyst.Engine.Utilities.Vector2"/> with components 0, 1.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.#ctor(System.Single,System.Single)">
            <summary>
            Constructs a 2d vector with X and Y from two values.
            </summary>
            <param name="x">The x coordinate in 2d-space.</param>
            <param name="y">The y coordinate in 2d-space.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.#ctor(System.Single)">
            <summary>
            Constructs a 2d vector with X and Y set to the same value.
            </summary>
            <param name="value">The x and y coordinates in 2d-space.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.op_UnaryNegation(Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Inverts values in the specified <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/> on the right of the sub sign.</param>
            <returns>Result of the inversion.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.op_Addition(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/> on the left of the add sign.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/> on the right of the add sign.</param>
            <returns>Sum of the vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.op_Subtraction(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Subtracts a <see cref="T:Catalyst.Engine.Utilities.Vector2"/> from a <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/> on the left of the sub sign.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/> on the right of the sub sign.</param>
            <returns>Result of the vector subtraction.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.op_Multiply(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Multiplies the components of two vectors by each other.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/> on the left of the mul sign.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/> on the right of the mul sign.</param>
            <returns>Result of the vector multiplication.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.op_Multiply(Catalyst.Engine.Utilities.Vector2,System.Single)">
            <summary>
            Multiplies the components of vector by a scalar.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/> on the left of the mul sign.</param>
            <param name="scaleFactor">Scalar value on the right of the mul sign.</param>
            <returns>Result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.op_Multiply(System.Single,Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Multiplies the components of vector by a scalar.
            </summary>
            <param name="scaleFactor">Scalar value on the left of the mul sign.</param>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/> on the right of the mul sign.</param>
            <returns>Result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.op_Division(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Divides the components of a <see cref="T:Catalyst.Engine.Utilities.Vector2"/> by the components of another <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/> on the left of the div sign.</param>
            <param name="value2">Divisor <see cref="T:Catalyst.Engine.Utilities.Vector2"/> on the right of the div sign.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.op_Division(Catalyst.Engine.Utilities.Vector2,System.Single)">
            <summary>
            Divides the components of a <see cref="T:Catalyst.Engine.Utilities.Vector2"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/> on the left of the div sign.</param>
            <param name="divider">Divisor scalar on the right of the div sign.</param>
            <returns>The result of dividing a vector by a scalar.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.op_Equality(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Compares whether two <see cref="T:Catalyst.Engine.Utilities.Vector2"/> instances are equal.
            </summary>
            <param name="value1"><see cref="T:Catalyst.Engine.Utilities.Vector2"/> instance on the left of the equal sign.</param>
            <param name="value2"><see cref="T:Catalyst.Engine.Utilities.Vector2"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.op_Inequality(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Compares whether two <see cref="T:Catalyst.Engine.Utilities.Vector2"/> instances are not equal.
            </summary>
            <param name="value1"><see cref="T:Catalyst.Engine.Utilities.Vector2"/> instance on the left of the not equal sign.</param>
            <param name="value2"><see cref="T:Catalyst.Engine.Utilities.Vector2"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>	
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Add(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and <paramref name="value2"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <returns>The result of the vector addition.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Add(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and
            <paramref name="value2"/>, storing the result of the
            addition in <paramref name="result"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <param name="result">The result of the vector addition.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Barycentric(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2,System.Single,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 2d-triangle.
            </summary>
            <param name="value1">The first vector of 2d-triangle.</param>
            <param name="value2">The second vector of 2d-triangle.</param>
            <param name="value3">The third vector of 2d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 2d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 2d-triangle.</param>
            <returns>The cartesian translation of barycentric coordinates.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Barycentric(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@,System.Single,System.Single,Catalyst.Engine.Utilities.Vector2@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 2d-triangle.
            </summary>
            <param name="value1">The first vector of 2d-triangle.</param>
            <param name="value2">The second vector of 2d-triangle.</param>
            <param name="value3">The third vector of 2d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 2d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 2d-triangle.</param>
            <param name="result">The cartesian translation of barycentric coordinates as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.CatmullRom(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The result of CatmullRom interpolation.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.CatmullRom(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@,System.Single,Catalyst.Engine.Utilities.Vector2@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The result of CatmullRom interpolation as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Ceiling">
            <summary>
            Round the members of this <see cref="T:Catalyst.Engine.Utilities.Vector2"/> towards positive infinity.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Ceiling(Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains members from another vector rounded towards positive infinity.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <returns>The rounded <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Ceiling(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains members from another vector rounded towards positive infinity.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="result">The rounded <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Clamp(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Clamp(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <param name="result">The clamped value as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Distance(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The distance between two vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Distance(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@,System.Single@)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.DistanceSquared(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The squared distance between two vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.DistanceSquared(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@,System.Single@)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The squared distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Divide(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Divides the components of a <see cref="T:Catalyst.Engine.Utilities.Vector2"/> by the components of another <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="value2">Divisor <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Divide(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@)">
            <summary>
            Divides the components of a <see cref="T:Catalyst.Engine.Utilities.Vector2"/> by the components of another <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="value2">Divisor <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="result">The result of dividing the vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Divide(Catalyst.Engine.Utilities.Vector2,System.Single)">
            <summary>
            Divides the components of a <see cref="T:Catalyst.Engine.Utilities.Vector2"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <returns>The result of dividing a vector by a scalar.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Divide(Catalyst.Engine.Utilities.Vector2@,System.Single,Catalyst.Engine.Utilities.Vector2@)">
            <summary>
            Divides the components of a <see cref="T:Catalyst.Engine.Utilities.Vector2"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <param name="result">The result of dividing a vector by a scalar as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Dot(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The dot product of two vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Dot(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@,System.Single@)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The dot product of two vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Equals(Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.
            </summary>
            <param name="other">The <see cref="T:Catalyst.Engine.Utilities.Vector2"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Floor">
            <summary>
            Round the members of this <see cref="T:Catalyst.Engine.Utilities.Vector2"/> towards negative infinity.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Floor(Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains members from another vector rounded towards negative infinity.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <returns>The rounded <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Floor(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains members from another vector rounded towards negative infinity.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="result">The rounded <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Hermite(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The hermite spline interpolation vector.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Hermite(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@,System.Single,Catalyst.Engine.Utilities.Vector2@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The hermite spline interpolation vector as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Length">
            <summary>
            Returns the length of this <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.
            </summary>
            <returns>The length of this <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.LengthSquared">
            <summary>
            Returns the squared length of this <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.
            </summary>
            <returns>The squared length of this <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Lerp(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <returns>The result of linear interpolation of the specified vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Lerp(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@,System.Single,Catalyst.Engine.Utilities.Vector2@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <param name="result">The result of linear interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.LerpPrecise(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains linear interpolation of the specified vectors.
            Uses <see cref="M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)"/> on MathHelper for the interpolation.
            Less efficient but more precise compared to <see cref="M:Catalyst.Engine.Utilities.Vector2.Lerp(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2,System.Single)"/>.
            See remarks section of <see cref="M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)"/> on MathHelper for more info.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <returns>The result of linear interpolation of the specified vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.LerpPrecise(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@,System.Single,Catalyst.Engine.Utilities.Vector2@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains linear interpolation of the specified vectors.
            Uses <see cref="M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)"/> on MathHelper for the interpolation.
            Less efficient but more precise compared to <see cref="M:Catalyst.Engine.Utilities.Vector2.Lerp(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@,System.Single,Catalyst.Engine.Utilities.Vector2@)"/>.
            See remarks section of <see cref="M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)"/> on MathHelper for more info.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <param name="result">The result of linear interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Max(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:Catalyst.Engine.Utilities.Vector2"/> with maximal values from the two vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Max(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:Catalyst.Engine.Utilities.Vector2"/> with maximal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Min(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:Catalyst.Engine.Utilities.Vector2"/> with minimal values from the two vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Min(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:Catalyst.Engine.Utilities.Vector2"/> with minimal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Multiply(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <returns>The result of the vector multiplication.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Multiply(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="result">The result of the vector multiplication as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Multiply(Catalyst.Engine.Utilities.Vector2,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains a multiplication of <see cref="T:Catalyst.Engine.Utilities.Vector2"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <returns>The result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Multiply(Catalyst.Engine.Utilities.Vector2@,System.Single,Catalyst.Engine.Utilities.Vector2@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains a multiplication of <see cref="T:Catalyst.Engine.Utilities.Vector2"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">The result of the multiplication with a scalar as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Negate(Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains the specified vector inversion.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <returns>The result of the vector inversion.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Negate(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains the specified vector inversion.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="result">The result of the vector inversion as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Normalize">
            <summary>
            Turns this <see cref="T:Catalyst.Engine.Utilities.Vector2"/> to a unit vector with the same direction.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Normalize(Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains a normalized values from another vector.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <returns>Unit vector.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Normalize(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains a normalized values from another vector.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="result">Unit vector as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Reflect(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains reflect vector of the given vector and normal.
            </summary>
            <param name="vector">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="normal">Reflection normal.</param>
            <returns>Reflected vector.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Reflect(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains reflect vector of the given vector and normal.
            </summary>
            <param name="vector">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="normal">Reflection normal.</param>
            <param name="result">Reflected vector as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Round">
            <summary>
            Round the members of this <see cref="T:Catalyst.Engine.Utilities.Vector2"/> to the nearest integer value.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Round(Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains members from another vector rounded to the nearest integer value.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <returns>The rounded <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Round(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains members from another vector rounded to the nearest integer value.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="result">The rounded <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.SmoothStep(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="amount">Weighting value.</param>
            <returns>Cubic interpolation of the specified vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.SmoothStep(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@,System.Single,Catalyst.Engine.Utilities.Vector2@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="amount">Weighting value.</param>
            <param name="result">Cubic interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Subtract(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Vector2)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains subtraction of on <see cref="T:Catalyst.Engine.Utilities.Vector2"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <returns>The result of the vector subtraction.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Subtract(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Vector2@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains subtraction of on <see cref="T:Catalyst.Engine.Utilities.Vector2"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="result">The result of the vector subtraction as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Catalyst.Engine.Utilities.Vector2"/> in the format:
            {X:[<see cref="F:Catalyst.Engine.Utilities.Vector2.X"/>] Y:[<see cref="F:Catalyst.Engine.Utilities.Vector2.Y"/>]}
            </summary>
            <returns>A <see cref="T:System.String"/> representation of this <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.ToPoint">
            <summary>
            Gets a <see cref="T:Catalyst.Engine.Utilities.Point"/> representation for this object.
            </summary>
            <returns>A <see cref="T:Catalyst.Engine.Utilities.Point"/> representation for this object.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Transform(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Matrix)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains a transformation of 2d-vector by the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="position">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="matrix">The transformation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <returns>Transformed <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Transform(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Vector2@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains a transformation of 2d-vector by the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="position">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="matrix">The transformation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="result">Transformed <see cref="T:Catalyst.Engine.Utilities.Vector2"/> as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Transform(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Quaternion)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains a transformation of 2d-vector by the specified <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>, representing the rotation.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="rotation">The <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> which contains rotation transformation.</param>
            <returns>Transformed <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Transform(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Vector2@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains a transformation of 2d-vector by the specified <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>, representing the rotation.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="rotation">The <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> which contains rotation transformation.</param>
            <param name="result">Transformed <see cref="T:Catalyst.Engine.Utilities.Vector2"/> as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Transform(Catalyst.Engine.Utilities.Vector2[],System.Int32,Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Vector2[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:Catalyst.Engine.Utilities.Vector2"/> by the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="matrix">The transformation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:Catalyst.Engine.Utilities.Vector2"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Transform(Catalyst.Engine.Utilities.Vector2[],System.Int32,Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Vector2[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:Catalyst.Engine.Utilities.Vector2"/> by the specified <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="rotation">The <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:Catalyst.Engine.Utilities.Vector2"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Transform(Catalyst.Engine.Utilities.Vector2[],Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Vector2[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:Catalyst.Engine.Utilities.Vector2"/> by the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="matrix">The transformation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Transform(Catalyst.Engine.Utilities.Vector2[],Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Vector2[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:Catalyst.Engine.Utilities.Vector2"/> by the specified <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="rotation">The <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.TransformNormal(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Matrix)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains a transformation of the specified normal by the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="normal">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/> which represents a normal vector.</param>
            <param name="matrix">The transformation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <returns>Transformed normal.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.TransformNormal(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Vector2@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector2"/> that contains a transformation of the specified normal by the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="normal">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/> which represents a normal vector.</param>
            <param name="matrix">The transformation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="result">Transformed normal as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.TransformNormal(Catalyst.Engine.Utilities.Vector2[],System.Int32,Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Vector2[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on normals within array of <see cref="T:Catalyst.Engine.Utilities.Vector2"/> by the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="matrix">The transformation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:Catalyst.Engine.Utilities.Vector2"/> should be written.</param>
            <param name="length">The number of normals to be transformed.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.TransformNormal(Catalyst.Engine.Utilities.Vector2[],Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Vector2[])">
            <summary>
            Apply transformation on all normals within array of <see cref="T:Catalyst.Engine.Utilities.Vector2"/> by the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="matrix">The transformation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector2.Deconstruct(System.Single@,System.Single@)">
            <summary>
            Deconstruction method for <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="T:Catalyst.Engine.Utilities.Vector3">
            <summary>
            Describes a 3D-vector.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Vector3.X">
            <summary>
            The x coordinate of this <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Vector3.Y">
            <summary>
            The y coordinate of this <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Vector3.Z">
            <summary>
            The z coordinate of this <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Vector3.Zero">
            <summary>
            Returns a <see cref="T:Catalyst.Engine.Utilities.Vector3"/> with components 0, 0, 0.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Vector3.One">
            <summary>
            Returns a <see cref="T:Catalyst.Engine.Utilities.Vector3"/> with components 1, 1, 1.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Vector3.UnitX">
            <summary>
            Returns a <see cref="T:Catalyst.Engine.Utilities.Vector3"/> with components 1, 0, 0.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Vector3.UnitY">
            <summary>
            Returns a <see cref="T:Catalyst.Engine.Utilities.Vector3"/> with components 0, 1, 0.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Vector3.UnitZ">
            <summary>
            Returns a <see cref="T:Catalyst.Engine.Utilities.Vector3"/> with components 0, 0, 1.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Vector3.Up">
            <summary>
            Returns a <see cref="T:Catalyst.Engine.Utilities.Vector3"/> with components 0, 1, 0.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Vector3.Down">
            <summary>
            Returns a <see cref="T:Catalyst.Engine.Utilities.Vector3"/> with components 0, -1, 0.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Vector3.Right">
            <summary>
            Returns a <see cref="T:Catalyst.Engine.Utilities.Vector3"/> with components 1, 0, 0.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Vector3.Left">
            <summary>
            Returns a <see cref="T:Catalyst.Engine.Utilities.Vector3"/> with components -1, 0, 0.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Vector3.Forward">
            <summary>
            Returns a <see cref="T:Catalyst.Engine.Utilities.Vector3"/> with components 0, 0, -1.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Vector3.Backward">
            <summary>
            Returns a <see cref="T:Catalyst.Engine.Utilities.Vector3"/> with components 0, 0, 1.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Constructs a 3d vector with X, Y and Z from three values.
            </summary>
            <param name="x">The x coordinate in 3d-space.</param>
            <param name="y">The y coordinate in 3d-space.</param>
            <param name="z">The z coordinate in 3d-space.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.#ctor(System.Single)">
            <summary>
            Constructs a 3d vector with X, Y and Z set to the same value.
            </summary>
            <param name="value">The x, y and z coordinates in 3d-space.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.#ctor(Catalyst.Engine.Utilities.Vector2,System.Single)">
            <summary>
            Constructs a 3d vector with X, Y from <see cref="T:Catalyst.Engine.Utilities.Vector2"/> and Z from a scalar.
            </summary>
            <param name="value">The x and y coordinates in 3d-space.</param>
            <param name="z">The z coordinate in 3d-space.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Add(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and <paramref name="value2"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <returns>The result of the vector addition.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Add(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and
            <paramref name="value2"/>, storing the result of the
            addition in <paramref name="result"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <param name="result">The result of the vector addition.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Barycentric(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3,System.Single,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 3d-triangle.
            </summary>
            <param name="value1">The first vector of 3d-triangle.</param>
            <param name="value2">The second vector of 3d-triangle.</param>
            <param name="value3">The third vector of 3d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 3d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 3d-triangle.</param>
            <returns>The cartesian translation of barycentric coordinates.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Barycentric(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,System.Single,System.Single,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 3d-triangle.
            </summary>
            <param name="value1">The first vector of 3d-triangle.</param>
            <param name="value2">The second vector of 3d-triangle.</param>
            <param name="value3">The third vector of 3d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 3d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 3d-triangle.</param>
            <param name="result">The cartesian translation of barycentric coordinates as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.CatmullRom(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The result of CatmullRom interpolation.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.CatmullRom(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,System.Single,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The result of CatmullRom interpolation as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Ceiling">
            <summary>
            Round the members of this <see cref="T:Catalyst.Engine.Utilities.Vector3"/> towards positive infinity.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Ceiling(Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains members from another vector rounded towards positive infinity.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <returns>The rounded <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Ceiling(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains members from another vector rounded towards positive infinity.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="result">The rounded <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Clamp(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Clamp(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <param name="result">The clamped value as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Cross(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Computes the cross product of two vectors.
            </summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <returns>The cross product of two vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Cross(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Computes the cross product of two vectors.
            </summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <param name="result">The cross product of two vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Distance(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The distance between two vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Distance(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,System.Single@)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.DistanceSquared(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The squared distance between two vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.DistanceSquared(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,System.Single@)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The squared distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Divide(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Divides the components of a <see cref="T:Catalyst.Engine.Utilities.Vector3"/> by the components of another <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="value2">Divisor <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Divide(Catalyst.Engine.Utilities.Vector3,System.Single)">
            <summary>
            Divides the components of a <see cref="T:Catalyst.Engine.Utilities.Vector3"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <returns>The result of dividing a vector by a scalar.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Divide(Catalyst.Engine.Utilities.Vector3@,System.Single,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Divides the components of a <see cref="T:Catalyst.Engine.Utilities.Vector3"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <param name="result">The result of dividing a vector by a scalar as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Divide(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Divides the components of a <see cref="T:Catalyst.Engine.Utilities.Vector3"/> by the components of another <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="value2">Divisor <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="result">The result of dividing the vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Dot(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The dot product of two vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Dot(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,System.Single@)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The dot product of two vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Equals(Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.
            </summary>
            <param name="other">The <see cref="T:Catalyst.Engine.Utilities.Vector3"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Floor">
            <summary>
            Round the members of this <see cref="T:Catalyst.Engine.Utilities.Vector3"/> towards negative infinity.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Floor(Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains members from another vector rounded towards negative infinity.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <returns>The rounded <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Floor(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains members from another vector rounded towards negative infinity.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="result">The rounded <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Hermite(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The hermite spline interpolation vector.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Hermite(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,System.Single,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The hermite spline interpolation vector as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Length">
            <summary>
            Returns the length of this <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.
            </summary>
            <returns>The length of this <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.LengthSquared">
            <summary>
            Returns the squared length of this <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.
            </summary>
            <returns>The squared length of this <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Lerp(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <returns>The result of linear interpolation of the specified vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Lerp(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,System.Single,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <param name="result">The result of linear interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.LerpPrecise(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains linear interpolation of the specified vectors.
            Uses <see cref="M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)"/> on MathHelper for the interpolation.
            Less efficient but more precise compared to <see cref="M:Catalyst.Engine.Utilities.Vector3.Lerp(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3,System.Single)"/>.
            See remarks section of <see cref="M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)"/> on MathHelper for more info.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <returns>The result of linear interpolation of the specified vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.LerpPrecise(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,System.Single,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains linear interpolation of the specified vectors.
            Uses <see cref="M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)"/> on MathHelper for the interpolation.
            Less efficient but more precise compared to <see cref="M:Catalyst.Engine.Utilities.Vector3.Lerp(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,System.Single,Catalyst.Engine.Utilities.Vector3@)"/>.
            See remarks section of <see cref="M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)"/> on MathHelper for more info.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <param name="result">The result of linear interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Max(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:Catalyst.Engine.Utilities.Vector3"/> with maximal values from the two vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Max(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:Catalyst.Engine.Utilities.Vector3"/> with maximal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Min(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:Catalyst.Engine.Utilities.Vector3"/> with minimal values from the two vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Min(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:Catalyst.Engine.Utilities.Vector3"/> with minimal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Multiply(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <returns>The result of the vector multiplication.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Multiply(Catalyst.Engine.Utilities.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains a multiplication of <see cref="T:Catalyst.Engine.Utilities.Vector3"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <returns>The result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Multiply(Catalyst.Engine.Utilities.Vector3@,System.Single,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains a multiplication of <see cref="T:Catalyst.Engine.Utilities.Vector3"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">The result of the multiplication with a scalar as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Multiply(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="result">The result of the vector multiplication as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Negate(Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains the specified vector inversion.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <returns>The result of the vector inversion.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Negate(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains the specified vector inversion.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="result">The result of the vector inversion as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Normalize">
            <summary>
            Turns this <see cref="T:Catalyst.Engine.Utilities.Vector3"/> to a unit vector with the same direction.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Normalize(Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains a normalized values from another vector.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <returns>Unit vector.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Normalize(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains a normalized values from another vector.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="result">Unit vector as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Reflect(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains reflect vector of the given vector and normal.
            </summary>
            <param name="vector">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="normal">Reflection normal.</param>
            <returns>Reflected vector.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Reflect(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains reflect vector of the given vector and normal.
            </summary>
            <param name="vector">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="normal">Reflection normal.</param>
            <param name="result">Reflected vector as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Round">
            <summary>
            Round the members of this <see cref="T:Catalyst.Engine.Utilities.Vector3"/> towards the nearest integer value.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Round(Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains members from another vector rounded to the nearest integer value.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <returns>The rounded <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Round(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains members from another vector rounded to the nearest integer value.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="result">The rounded <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.SmoothStep(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="amount">Weighting value.</param>
            <returns>Cubic interpolation of the specified vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.SmoothStep(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,System.Single,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="amount">Weighting value.</param>
            <param name="result">Cubic interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Subtract(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains subtraction of on <see cref="T:Catalyst.Engine.Utilities.Vector3"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <returns>The result of the vector subtraction.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Subtract(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains subtraction of on <see cref="T:Catalyst.Engine.Utilities.Vector3"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="result">The result of the vector subtraction as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Catalyst.Engine.Utilities.Vector3"/> in the format:
            {X:[<see cref="F:Catalyst.Engine.Utilities.Vector3.X"/>] Y:[<see cref="F:Catalyst.Engine.Utilities.Vector3.Y"/>] Z:[<see cref="F:Catalyst.Engine.Utilities.Vector3.Z"/>]}
            </summary>
            <returns>A <see cref="T:System.String"/> representation of this <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Transform(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Matrix)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains a transformation of 3d-vector by the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="position">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="matrix">The transformation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <returns>Transformed <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Transform(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains a transformation of 3d-vector by the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="position">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="matrix">The transformation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="result">Transformed <see cref="T:Catalyst.Engine.Utilities.Vector3"/> as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Transform(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Quaternion)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains a transformation of 3d-vector by the specified <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>, representing the rotation.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="rotation">The <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> which contains rotation transformation.</param>
            <returns>Transformed <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Transform(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains a transformation of 3d-vector by the specified <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>, representing the rotation.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="rotation">The <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> which contains rotation transformation.</param>
            <param name="result">Transformed <see cref="T:Catalyst.Engine.Utilities.Vector3"/> as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Transform(Catalyst.Engine.Utilities.Vector3[],System.Int32,Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Vector3[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:Catalyst.Engine.Utilities.Vector3"/> by the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="matrix">The transformation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:Catalyst.Engine.Utilities.Vector3"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Transform(Catalyst.Engine.Utilities.Vector3[],System.Int32,Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Vector3[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:Catalyst.Engine.Utilities.Vector3"/> by the specified <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="rotation">The <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:Catalyst.Engine.Utilities.Vector3"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Transform(Catalyst.Engine.Utilities.Vector3[],Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Vector3[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:Catalyst.Engine.Utilities.Vector3"/> by the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="matrix">The transformation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Transform(Catalyst.Engine.Utilities.Vector3[],Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Vector3[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:Catalyst.Engine.Utilities.Vector3"/> by the specified <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="rotation">The <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.TransformNormal(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Matrix)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains a transformation of the specified normal by the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="normal">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/> which represents a normal vector.</param>
            <param name="matrix">The transformation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <returns>Transformed normal.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.TransformNormal(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Vector3@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector3"/> that contains a transformation of the specified normal by the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="normal">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/> which represents a normal vector.</param>
            <param name="matrix">The transformation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="result">Transformed normal as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.TransformNormal(Catalyst.Engine.Utilities.Vector3[],System.Int32,Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Vector3[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on normals within array of <see cref="T:Catalyst.Engine.Utilities.Vector3"/> by the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="matrix">The transformation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:Catalyst.Engine.Utilities.Vector3"/> should be written.</param>
            <param name="length">The number of normals to be transformed.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.TransformNormal(Catalyst.Engine.Utilities.Vector3[],Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Vector3[])">
            <summary>
            Apply transformation on all normals within array of <see cref="T:Catalyst.Engine.Utilities.Vector3"/> by the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="matrix">The transformation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.Deconstruct(System.Single@,System.Single@,System.Single@)">
            <summary>
            Deconstruction method for <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.op_Equality(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Compares whether two <see cref="T:Catalyst.Engine.Utilities.Vector3"/> instances are equal.
            </summary>
            <param name="value1"><see cref="T:Catalyst.Engine.Utilities.Vector3"/> instance on the left of the equal sign.</param>
            <param name="value2"><see cref="T:Catalyst.Engine.Utilities.Vector3"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.op_Inequality(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Compares whether two <see cref="T:Catalyst.Engine.Utilities.Vector3"/> instances are not equal.
            </summary>
            <param name="value1"><see cref="T:Catalyst.Engine.Utilities.Vector3"/> instance on the left of the not equal sign.</param>
            <param name="value2"><see cref="T:Catalyst.Engine.Utilities.Vector3"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>	
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.op_Addition(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/> on the left of the add sign.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/> on the right of the add sign.</param>
            <returns>Sum of the vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.op_UnaryNegation(Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Inverts values in the specified <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/> on the right of the sub sign.</param>
            <returns>Result of the inversion.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.op_Subtraction(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Subtracts a <see cref="T:Catalyst.Engine.Utilities.Vector3"/> from a <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/> on the left of the sub sign.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/> on the right of the sub sign.</param>
            <returns>Result of the vector subtraction.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.op_Multiply(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Multiplies the components of two vectors by each other.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/> on the left of the mul sign.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/> on the right of the mul sign.</param>
            <returns>Result of the vector multiplication.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.op_Multiply(Catalyst.Engine.Utilities.Vector3,System.Single)">
            <summary>
            Multiplies the components of vector by a scalar.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/> on the left of the mul sign.</param>
            <param name="scaleFactor">Scalar value on the right of the mul sign.</param>
            <returns>Result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.op_Multiply(System.Single,Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Multiplies the components of vector by a scalar.
            </summary>
            <param name="scaleFactor">Scalar value on the left of the mul sign.</param>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/> on the right of the mul sign.</param>
            <returns>Result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.op_Division(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Vector3)">
            <summary>
            Divides the components of a <see cref="T:Catalyst.Engine.Utilities.Vector3"/> by the components of another <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/> on the left of the div sign.</param>
            <param name="value2">Divisor <see cref="T:Catalyst.Engine.Utilities.Vector3"/> on the right of the div sign.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector3.op_Division(Catalyst.Engine.Utilities.Vector3,System.Single)">
            <summary>
            Divides the components of a <see cref="T:Catalyst.Engine.Utilities.Vector3"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/> on the left of the div sign.</param>
            <param name="divider">Divisor scalar on the right of the div sign.</param>
            <returns>The result of dividing a vector by a scalar.</returns>
        </member>
        <member name="T:Catalyst.Engine.Utilities.Vector4">
            <summary>
            Describes a 4D-vector.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Vector4.X">
            <summary>
            The x coordinate of this <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Vector4.Y">
            <summary>
            The y coordinate of this <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Vector4.Z">
            <summary>
            The z coordinate of this <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.
            </summary>
        </member>
        <member name="F:Catalyst.Engine.Utilities.Vector4.W">
            <summary>
            The w coordinate of this <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Vector4.Zero">
            <summary>
            Returns a <see cref="T:Catalyst.Engine.Utilities.Vector4"/> with components 0, 0, 0, 0.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Vector4.One">
            <summary>
            Returns a <see cref="T:Catalyst.Engine.Utilities.Vector4"/> with components 1, 1, 1, 1.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Vector4.UnitX">
            <summary>
            Returns a <see cref="T:Catalyst.Engine.Utilities.Vector4"/> with components 1, 0, 0, 0.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Vector4.UnitY">
            <summary>
            Returns a <see cref="T:Catalyst.Engine.Utilities.Vector4"/> with components 0, 1, 0, 0.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Vector4.UnitZ">
            <summary>
            Returns a <see cref="T:Catalyst.Engine.Utilities.Vector4"/> with components 0, 0, 1, 0.
            </summary>
        </member>
        <member name="P:Catalyst.Engine.Utilities.Vector4.UnitW">
            <summary>
            Returns a <see cref="T:Catalyst.Engine.Utilities.Vector4"/> with components 0, 0, 0, 1.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a 3d vector with X, Y, Z and W from four values.
            </summary>
            <param name="x">The x coordinate in 4d-space.</param>
            <param name="y">The y coordinate in 4d-space.</param>
            <param name="z">The z coordinate in 4d-space.</param>
            <param name="w">The w coordinate in 4d-space.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.#ctor(Catalyst.Engine.Utilities.Vector2,System.Single,System.Single)">
            <summary>
            Constructs a 3d vector with X and Z from <see cref="T:Catalyst.Engine.Utilities.Vector2"/> and Z and W from the scalars.
            </summary>
            <param name="value">The x and y coordinates in 4d-space.</param>
            <param name="z">The z coordinate in 4d-space.</param>
            <param name="w">The w coordinate in 4d-space.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.#ctor(Catalyst.Engine.Utilities.Vector3,System.Single)">
            <summary>
            Constructs a 3d vector with X, Y, Z from <see cref="T:Catalyst.Engine.Utilities.Vector3"/> and W from a scalar.
            </summary>
            <param name="value">The x, y and z coordinates in 4d-space.</param>
            <param name="w">The w coordinate in 4d-space.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.#ctor(System.Single)">
            <summary>
            Constructs a 4d vector with X, Y, Z and W set to the same value.
            </summary>
            <param name="value">The x, y, z and w coordinates in 4d-space.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Add(Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and <paramref name="value2"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <returns>The result of the vector addition.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Add(Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and
            <paramref name="value2"/>, storing the result of the
            addition in <paramref name="result"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <param name="result">The result of the vector addition.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Barycentric(Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4,System.Single,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 4d-triangle.
            </summary>
            <param name="value1">The first vector of 4d-triangle.</param>
            <param name="value2">The second vector of 4d-triangle.</param>
            <param name="value3">The third vector of 4d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 4d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 4d-triangle.</param>
            <returns>The cartesian translation of barycentric coordinates.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Barycentric(Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@,System.Single,System.Single,Catalyst.Engine.Utilities.Vector4@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 4d-triangle.
            </summary>
            <param name="value1">The first vector of 4d-triangle.</param>
            <param name="value2">The second vector of 4d-triangle.</param>
            <param name="value3">The third vector of 4d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 4d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 4d-triangle.</param>
            <param name="result">The cartesian translation of barycentric coordinates as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.CatmullRom(Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The result of CatmullRom interpolation.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.CatmullRom(Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@,System.Single,Catalyst.Engine.Utilities.Vector4@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The result of CatmullRom interpolation as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Ceiling">
            <summary>
            Round the members of this <see cref="T:Catalyst.Engine.Utilities.Vector4"/> towards positive infinity.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Ceiling(Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains members from another vector rounded towards positive infinity.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <returns>The rounded <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Ceiling(Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains members from another vector rounded towards positive infinity.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <param name="result">The rounded <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Clamp(Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Clamp(Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <param name="result">The clamped value as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Distance(Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The distance between two vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Distance(Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@,System.Single@)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.DistanceSquared(Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The squared distance between two vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.DistanceSquared(Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@,System.Single@)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The squared distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Divide(Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Divides the components of a <see cref="T:Catalyst.Engine.Utilities.Vector4"/> by the components of another <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <param name="value2">Divisor <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Divide(Catalyst.Engine.Utilities.Vector4,System.Single)">
            <summary>
            Divides the components of a <see cref="T:Catalyst.Engine.Utilities.Vector4"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <returns>The result of dividing a vector by a scalar.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Divide(Catalyst.Engine.Utilities.Vector4@,System.Single,Catalyst.Engine.Utilities.Vector4@)">
            <summary>
            Divides the components of a <see cref="T:Catalyst.Engine.Utilities.Vector4"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <param name="result">The result of dividing a vector by a scalar as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Divide(Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@)">
            <summary>
            Divides the components of a <see cref="T:Catalyst.Engine.Utilities.Vector4"/> by the components of another <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <param name="value2">Divisor <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <param name="result">The result of dividing the vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Dot(Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The dot product of two vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Dot(Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@,System.Single@)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The dot product of two vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Equals(Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.
            </summary>
            <param name="other">The <see cref="T:Catalyst.Engine.Utilities.Vector4"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Floor">
            <summary>
            Round the members of this <see cref="T:Catalyst.Engine.Utilities.Vector4"/> towards negative infinity.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Floor(Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains members from another vector rounded towards negative infinity.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <returns>The rounded <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Floor(Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains members from another vector rounded towards negative infinity.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <param name="result">The rounded <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.
            </summary>
            <returns>Hash code of this <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Hermite(Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The hermite spline interpolation vector.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Hermite(Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@,System.Single,Catalyst.Engine.Utilities.Vector4@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The hermite spline interpolation vector as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Length">
            <summary>
            Returns the length of this <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.
            </summary>
            <returns>The length of this <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.LengthSquared">
            <summary>
            Returns the squared length of this <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.
            </summary>
            <returns>The squared length of this <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Lerp(Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <returns>The result of linear interpolation of the specified vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Lerp(Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@,System.Single,Catalyst.Engine.Utilities.Vector4@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <param name="result">The result of linear interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.LerpPrecise(Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains linear interpolation of the specified vectors.
            Uses <see cref="M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)"/> on MathHelper for the interpolation.
            Less efficient but more precise compared to <see cref="M:Catalyst.Engine.Utilities.Vector4.Lerp(Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4,System.Single)"/>.
            See remarks section of <see cref="M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)"/> on MathHelper for more info.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <returns>The result of linear interpolation of the specified vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.LerpPrecise(Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@,System.Single,Catalyst.Engine.Utilities.Vector4@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains linear interpolation of the specified vectors.
            Uses <see cref="M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)"/> on MathHelper for the interpolation.
            Less efficient but more precise compared to <see cref="M:Catalyst.Engine.Utilities.Vector4.Lerp(Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@,System.Single,Catalyst.Engine.Utilities.Vector4@)"/>.
            See remarks section of <see cref="M:Microsoft.Xna.Framework.MathHelper.LerpPrecise(System.Single,System.Single,System.Single)"/> on MathHelper for more info.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <param name="result">The result of linear interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Max(Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:Catalyst.Engine.Utilities.Vector4"/> with maximal values from the two vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Max(Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:Catalyst.Engine.Utilities.Vector4"/> with maximal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Min(Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:Catalyst.Engine.Utilities.Vector4"/> with minimal values from the two vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Min(Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:Catalyst.Engine.Utilities.Vector4"/> with minimal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Multiply(Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <returns>The result of the vector multiplication.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Multiply(Catalyst.Engine.Utilities.Vector4,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains a multiplication of <see cref="T:Catalyst.Engine.Utilities.Vector4"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <returns>The result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Multiply(Catalyst.Engine.Utilities.Vector4@,System.Single,Catalyst.Engine.Utilities.Vector4@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains a multiplication of <see cref="T:Catalyst.Engine.Utilities.Vector4"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">The result of the multiplication with a scalar as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Multiply(Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <param name="result">The result of the vector multiplication as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Negate(Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains the specified vector inversion.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <returns>The result of the vector inversion.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Negate(Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains the specified vector inversion.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <param name="result">The result of the vector inversion as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Normalize">
            <summary>
            Turns this <see cref="T:Catalyst.Engine.Utilities.Vector4"/> to a unit vector with the same direction.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Normalize(Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains a normalized values from another vector.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <returns>Unit vector.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Normalize(Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains a normalized values from another vector.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <param name="result">Unit vector as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Round">
            <summary>
            Round the members of this <see cref="T:Catalyst.Engine.Utilities.Vector4"/> to the nearest integer value.
            </summary>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Round(Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains members from another vector rounded to the nearest integer value.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <returns>The rounded <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Round(Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains members from another vector rounded to the nearest integer value.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <param name="result">The rounded <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.SmoothStep(Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4,System.Single)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <param name="amount">Weighting value.</param>
            <returns>Cubic interpolation of the specified vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.SmoothStep(Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@,System.Single,Catalyst.Engine.Utilities.Vector4@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <param name="amount">Weighting value.</param>
            <param name="result">Cubic interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Subtract(Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains subtraction of on <see cref="T:Catalyst.Engine.Utilities.Vector4"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <returns>The result of the vector subtraction.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Subtract(Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Vector4@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains subtraction of on <see cref="T:Catalyst.Engine.Utilities.Vector4"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <param name="result">The result of the vector subtraction as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Transform(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Matrix)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains a transformation of 2d-vector by the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="matrix">The transformation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <returns>Transformed <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Transform(Catalyst.Engine.Utilities.Vector2,Catalyst.Engine.Utilities.Quaternion)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains a transformation of 2d-vector by the specified <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="rotation">The <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> which contains rotation transformation.</param>
            <returns>Transformed <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Transform(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Matrix)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains a transformation of 3d-vector by the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="matrix">The transformation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <returns>Transformed <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Transform(Catalyst.Engine.Utilities.Vector3,Catalyst.Engine.Utilities.Quaternion)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains a transformation of 3d-vector by the specified <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="rotation">The <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> which contains rotation transformation.</param>
            <returns>Transformed <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Transform(Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Matrix)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains a transformation of 4d-vector by the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <param name="matrix">The transformation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <returns>Transformed <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Transform(Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Quaternion)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains a transformation of 4d-vector by the specified <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <param name="rotation">The <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> which contains rotation transformation.</param>
            <returns>Transformed <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Transform(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Vector4@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains a transformation of 2d-vector by the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="matrix">The transformation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="result">Transformed <see cref="T:Catalyst.Engine.Utilities.Vector4"/> as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Transform(Catalyst.Engine.Utilities.Vector2@,Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Vector4@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains a transformation of 2d-vector by the specified <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector2"/>.</param>
            <param name="rotation">The <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> which contains rotation transformation.</param>
            <param name="result">Transformed <see cref="T:Catalyst.Engine.Utilities.Vector4"/> as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Transform(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Vector4@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains a transformation of 3d-vector by the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="matrix">The transformation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="result">Transformed <see cref="T:Catalyst.Engine.Utilities.Vector4"/> as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Transform(Catalyst.Engine.Utilities.Vector3@,Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Vector4@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains a transformation of 3d-vector by the specified <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector3"/>.</param>
            <param name="rotation">The <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> which contains rotation transformation.</param>
            <param name="result">Transformed <see cref="T:Catalyst.Engine.Utilities.Vector4"/> as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Transform(Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Vector4@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains a transformation of 4d-vector by the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <param name="matrix">The transformation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="result">Transformed <see cref="T:Catalyst.Engine.Utilities.Vector4"/> as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Transform(Catalyst.Engine.Utilities.Vector4@,Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Vector4@)">
            <summary>
            Creates a new <see cref="T:Catalyst.Engine.Utilities.Vector4"/> that contains a transformation of 4d-vector by the specified <see cref="T:Catalyst.Engine.Utilities.Quaternion"/>.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</param>
            <param name="rotation">The <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> which contains rotation transformation.</param>
            <param name="result">Transformed <see cref="T:Catalyst.Engine.Utilities.Vector4"/> as an output parameter.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Transform(Catalyst.Engine.Utilities.Vector4[],System.Int32,Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Vector4[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:Catalyst.Engine.Utilities.Vector4"/> by the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="matrix">The transformation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:Catalyst.Engine.Utilities.Vector4"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Transform(Catalyst.Engine.Utilities.Vector4[],System.Int32,Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Vector4[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:Catalyst.Engine.Utilities.Vector4"/> by the specified <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="rotation">The <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:Catalyst.Engine.Utilities.Vector4"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Transform(Catalyst.Engine.Utilities.Vector4[],Catalyst.Engine.Utilities.Matrix@,Catalyst.Engine.Utilities.Vector4[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:Catalyst.Engine.Utilities.Vector4"/> by the specified <see cref="T:Catalyst.Engine.Utilities.Matrix"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="matrix">The transformation <see cref="T:Catalyst.Engine.Utilities.Matrix"/>.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Transform(Catalyst.Engine.Utilities.Vector4[],Catalyst.Engine.Utilities.Quaternion@,Catalyst.Engine.Utilities.Vector4[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:Catalyst.Engine.Utilities.Vector4"/> by the specified <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="rotation">The <see cref="T:Catalyst.Engine.Utilities.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:Catalyst.Engine.Utilities.Vector4"/> in the format:
            {X:[<see cref="F:Catalyst.Engine.Utilities.Vector4.X"/>] Y:[<see cref="F:Catalyst.Engine.Utilities.Vector4.Y"/>] Z:[<see cref="F:Catalyst.Engine.Utilities.Vector4.Z"/>] W:[<see cref="F:Catalyst.Engine.Utilities.Vector4.W"/>]}
            </summary>
            <returns>A <see cref="T:System.String"/> representation of this <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Deconstruction method for <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="w"></param>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.op_UnaryNegation(Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Inverts values in the specified <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/> on the right of the sub sign.</param>
            <returns>Result of the inversion.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.op_Equality(Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Compares whether two <see cref="T:Catalyst.Engine.Utilities.Vector4"/> instances are equal.
            </summary>
            <param name="value1"><see cref="T:Catalyst.Engine.Utilities.Vector4"/> instance on the left of the equal sign.</param>
            <param name="value2"><see cref="T:Catalyst.Engine.Utilities.Vector4"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.op_Inequality(Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Compares whether two <see cref="T:Catalyst.Engine.Utilities.Vector4"/> instances are not equal.
            </summary>
            <param name="value1"><see cref="T:Catalyst.Engine.Utilities.Vector4"/> instance on the left of the not equal sign.</param>
            <param name="value2"><see cref="T:Catalyst.Engine.Utilities.Vector4"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>	
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.op_Addition(Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/> on the left of the add sign.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/> on the right of the add sign.</param>
            <returns>Sum of the vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.op_Subtraction(Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Subtracts a <see cref="T:Catalyst.Engine.Utilities.Vector4"/> from a <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/> on the left of the sub sign.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/> on the right of the sub sign.</param>
            <returns>Result of the vector subtraction.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.op_Multiply(Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Multiplies the components of two vectors by each other.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/> on the left of the mul sign.</param>
            <param name="value2">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/> on the right of the mul sign.</param>
            <returns>Result of the vector multiplication.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.op_Multiply(Catalyst.Engine.Utilities.Vector4,System.Single)">
            <summary>
            Multiplies the components of vector by a scalar.
            </summary>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/> on the left of the mul sign.</param>
            <param name="scaleFactor">Scalar value on the right of the mul sign.</param>
            <returns>Result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.op_Multiply(System.Single,Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Multiplies the components of vector by a scalar.
            </summary>
            <param name="scaleFactor">Scalar value on the left of the mul sign.</param>
            <param name="value">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/> on the right of the mul sign.</param>
            <returns>Result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.op_Division(Catalyst.Engine.Utilities.Vector4,Catalyst.Engine.Utilities.Vector4)">
            <summary>
            Divides the components of a <see cref="T:Catalyst.Engine.Utilities.Vector4"/> by the components of another <see cref="T:Catalyst.Engine.Utilities.Vector4"/>.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/> on the left of the div sign.</param>
            <param name="value2">Divisor <see cref="T:Catalyst.Engine.Utilities.Vector4"/> on the right of the div sign.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:Catalyst.Engine.Utilities.Vector4.op_Division(Catalyst.Engine.Utilities.Vector4,System.Single)">
            <summary>
            Divides the components of a <see cref="T:Catalyst.Engine.Utilities.Vector4"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:Catalyst.Engine.Utilities.Vector4"/> on the left of the div sign.</param>
            <param name="divider">Divisor scalar on the right of the div sign.</param>
            <returns>The result of dividing a vector by a scalar.</returns>
        </member>
    </members>
</doc>
